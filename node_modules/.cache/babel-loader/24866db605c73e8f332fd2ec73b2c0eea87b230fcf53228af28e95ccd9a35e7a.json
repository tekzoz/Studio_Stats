{"ast":null,"code":"var _jsxFileName = \"/Users/marcoaugustocomba/Desktop/Studio Stats/dashboard-pumaisdue/src/LastYearView.js\";\nimport React from 'react';\nimport { ArrowLeft, Calendar, TrendingUp, TrendingDown, Activity, List } from 'lucide-react';\nimport { getYearlyData } from './data';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, ReferenceLine, Label } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monthNames = ['Gen', 'Feb', 'Mar', 'Apr', 'Mag', 'Giu', 'Lug', 'Ago', 'Set', 'Ott', 'Nov', 'Dic'];\nconst StatCard = ({\n  icon,\n  label,\n  value,\n  comparison,\n  backgroundColor\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    backgroundColor,\n    borderRadius: '12px',\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n    padding: '20px',\n    display: 'flex',\n    flexDirection: 'column',\n    flex: '1 1 calc(50% - 10px)',\n    marginBottom: '20px'\n  },\n  role: \"region\",\n  \"aria-label\": label,\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      marginBottom: '12px'\n    },\n    children: [/*#__PURE__*/React.cloneElement(icon, {\n      size: 24,\n      color: '#4B5563',\n      'aria-hidden': 'true'\n    }), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        marginLeft: '12px',\n        fontSize: '16px',\n        fontWeight: '500',\n        color: '#4B5563'\n      },\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontSize: '24px',\n      fontWeight: 'bold',\n      color: '#1F2937',\n      marginBottom: '8px'\n    },\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this), comparison && /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontSize: '14px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: comparison === 'N/A' ? 'gray' : parseFloat(comparison) > 0 ? 'green' : 'red',\n        fontWeight: 'bold'\n      },\n      children: [comparison, \" rispetto all'anno precedente\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this);\n_c = StatCard;\nconst YearlyChart = ({\n  data,\n  averageTurni\n}) => {\n  const chartData = Object.entries(data).map(([month, {\n    totaleTurni\n  }]) => ({\n    name: monthNames[parseInt(month)],\n    turniDoppiaggio: totaleTurni\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: 'white',\n      borderRadius: '12px',\n      boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n      padding: '20px',\n      marginBottom: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        marginBottom: '20px',\n        color: '#4B5563'\n      },\n      children: \"Andamento Annuale dei Turni di Doppiaggio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: chartData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"turniDoppiaggio\",\n          name: \"Turni di Doppiaggio\",\n          stroke: \"#8884d8\",\n          strokeWidth: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReferenceLine, {\n          y: averageTurni,\n          stroke: \"red\",\n          strokeDasharray: \"3 3\",\n          children: /*#__PURE__*/_jsxDEV(Label, {\n            value: \"Media Annuale\",\n            position: \"insideTopLeft\",\n            fill: \"red\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '10px',\n        fontSize: '14px',\n        color: '#4B5563'\n      },\n      children: [\"Media Annuale: \", averageTurni.toFixed(2), \" turni\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_c2 = YearlyChart;\nconst MonthlyListCard = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    backgroundColor: 'white',\n    borderRadius: '12px',\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n    padding: '20px',\n    marginBottom: '20px'\n  },\n  role: \"region\",\n  \"aria-label\": \"Lista Mensile dei Turni di Doppiaggio\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      marginBottom: '16px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      size: 24,\n      color: \"#4B5563\",\n      \"aria-hidden\": \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        marginLeft: '12px',\n        fontSize: '18px',\n        fontWeight: '500',\n        color: '#4B5563'\n      },\n      children: \"Lista Mensile dei Turni di Doppiaggio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: Object.entries(data).map(([month, {\n      totaleTurni\n    }]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginBottom: '8px',\n        borderBottom: '1px solid #E5E7EB',\n        paddingBottom: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: '#4B5563'\n        },\n        children: monthNames[parseInt(month)]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontWeight: 'bold',\n          color: '#1F2937'\n        },\n        children: totaleTurni\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, month, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 74,\n  columnNumber: 3\n}, this);\n_c3 = MonthlyListCard;\nconst calculateComparison = (current, previous) => {\n  if (typeof current !== 'number' || typeof previous !== 'number' || previous === 0) {\n    return 'N/A';\n  }\n  const diff = current - previous;\n  const percentage = diff / previous * 100;\n  return percentage > 0 ? `+${percentage.toFixed(1)}%` : `${percentage.toFixed(1)}%`;\n};\nconst processYearlyData = data => {\n  var _data$monthWithMostTu, _data$monthWithLeastT;\n  if (!data || Object.keys(data).length === 0) return null;\n  const months = Object.keys(data);\n  const totalTurni = months.reduce((sum, month) => {\n    var _data$month;\n    return sum + (((_data$month = data[month]) === null || _data$month === void 0 ? void 0 : _data$month.totaleTurni) || 0);\n  }, 0);\n  const [monthWithMostTurni, monthWithLeastTurni] = months.reduce(([max, min], month) => {\n    var _data$month2, _data$max, _data$min;\n    const turni = ((_data$month2 = data[month]) === null || _data$month2 === void 0 ? void 0 : _data$month2.totaleTurni) || 0;\n    return [turni > (((_data$max = data[max]) === null || _data$max === void 0 ? void 0 : _data$max.totaleTurni) || 0) ? month : max, turni < (((_data$min = data[min]) === null || _data$min === void 0 ? void 0 : _data$min.totaleTurni) || 0) && turni > 0 ? month : min];\n  }, [months[0], months[0]]);\n  return {\n    totalTurni,\n    avgTurni: totalTurni / months.length,\n    monthWithMostTurni: {\n      month: parseInt(monthWithMostTurni) + 1,\n      value: ((_data$monthWithMostTu = data[monthWithMostTurni]) === null || _data$monthWithMostTu === void 0 ? void 0 : _data$monthWithMostTu.totaleTurni) || 0\n    },\n    monthWithLeastTurni: {\n      month: parseInt(monthWithLeastTurni) + 1,\n      value: ((_data$monthWithLeastT = data[monthWithLeastTurni]) === null || _data$monthWithLeastT === void 0 ? void 0 : _data$monthWithLeastT.totaleTurni) || 0\n    }\n  };\n};\nconst LastYearView = ({\n  setView,\n  year = new Date().getFullYear()\n}) => {\n  const yearlyData = getYearlyData(year);\n  const lastYearData = processYearlyData(yearlyData);\n  const previousYearData = processYearlyData(getYearlyData(year - 1));\n  if (!lastYearData || !previousYearData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#F0F9FF',\n        minHeight: '100vh',\n        padding: '24px',\n        fontFamily: \"'Helvetica Neue', Arial, sans-serif\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          maxWidth: '800px',\n          margin: '0 auto',\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Dati non disponibili\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Ci scusiamo, ma i dati per l'anno \", year, \" non sono disponibili al momento.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setView('main'),\n          style: {\n            background: '#4B5563',\n            color: 'white',\n            border: 'none',\n            borderRadius: '8px',\n            padding: '10px 20px',\n            cursor: 'pointer',\n            fontSize: '16px',\n            marginTop: '20px'\n          },\n          children: \"Torna alla Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this);\n  }\n  const stats = [{\n    icon: /*#__PURE__*/_jsxDEV(Calendar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this),\n    label: 'Totale Turni di Doppiaggio Annuali',\n    value: lastYearData.totalTurni,\n    comparison: calculateComparison(lastYearData.totalTurni, previousYearData.totalTurni),\n    backgroundColor: '#E6F3FF'\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(Activity, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this),\n    label: 'Media Turni di Doppiaggio Mensile',\n    value: lastYearData.avgTurni.toFixed(1),\n    comparison: calculateComparison(lastYearData.avgTurni, previousYearData.avgTurni),\n    backgroundColor: '#FFF0E6'\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(TrendingUp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this),\n    label: 'Mese con Più Turni di Doppiaggio',\n    value: `${lastYearData.monthWithMostTurni.value} (${monthNames[lastYearData.monthWithMostTurni.month - 1]})`,\n    comparison: calculateComparison(lastYearData.monthWithMostTurni.value, previousYearData.monthWithMostTurni.value),\n    backgroundColor: '#FFF0F0'\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(TrendingDown, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this),\n    label: 'Mese con Meno Turni di Doppiaggio',\n    value: `${lastYearData.monthWithLeastTurni.value} (${monthNames[lastYearData.monthWithLeastTurni.month - 1]})`,\n    comparison: calculateComparison(lastYearData.monthWithLeastTurni.value, previousYearData.monthWithLeastTurni.value),\n    backgroundColor: '#F0F0FF'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: '#F0F9FF',\n      minHeight: '100vh',\n      padding: '24px',\n      fontFamily: \"'Helvetica Neue', Arial, sans-serif\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: '800px',\n        margin: '0 auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setView('main'),\n        style: {\n          background: '#4B5563',\n          color: 'white',\n          border: 'none',\n          borderRadius: '8px',\n          padding: '10px 20px',\n          cursor: 'pointer',\n          display: 'flex',\n          alignItems: 'center',\n          fontSize: '16px',\n          marginBottom: '24px',\n          transition: 'background-color 0.3s'\n        },\n        onMouseOver: e => e.currentTarget.style.backgroundColor = '#374151',\n        onMouseOut: e => e.currentTarget.style.backgroundColor = '#4B5563',\n        children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n          size: 20,\n          style: {\n            marginRight: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), \"Torna alla Dashboard\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontSize: '32px',\n          fontWeight: 'bold',\n          textAlign: 'center',\n          marginBottom: '8px',\n          color: '#1F2937'\n        },\n        children: \"Statistiche Anno\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: '28px',\n          fontWeight: 'bold',\n          textAlign: 'center',\n          marginBottom: '32px',\n          color: '#4B5563'\n        },\n        children: year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YearlyChart, {\n        data: yearlyData,\n        averageTurni: lastYearData.avgTurni\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'space-between'\n        },\n        children: stats.map((stat, index) => /*#__PURE__*/_jsxDEV(StatCard, {\n          ...stat\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MonthlyListCard, {\n        data: yearlyData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n_c4 = LastYearView;\nexport default LastYearView;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"StatCard\");\n$RefreshReg$(_c2, \"YearlyChart\");\n$RefreshReg$(_c3, \"MonthlyListCard\");\n$RefreshReg$(_c4, \"LastYearView\");","map":{"version":3,"names":["React","ArrowLeft","Calendar","TrendingUp","TrendingDown","Activity","List","getYearlyData","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","ReferenceLine","Label","jsxDEV","_jsxDEV","monthNames","StatCard","icon","label","value","comparison","backgroundColor","style","borderRadius","boxShadow","padding","display","flexDirection","flex","marginBottom","role","children","alignItems","cloneElement","size","color","marginLeft","fontSize","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","parseFloat","_c","YearlyChart","data","averageTurni","chartData","Object","entries","map","month","totaleTurni","name","parseInt","turniDoppiaggio","width","height","strokeDasharray","dataKey","type","stroke","strokeWidth","y","position","fill","textAlign","marginTop","toFixed","_c2","MonthlyListCard","justifyContent","borderBottom","paddingBottom","_c3","calculateComparison","current","previous","diff","percentage","processYearlyData","_data$monthWithMostTu","_data$monthWithLeastT","keys","length","months","totalTurni","reduce","sum","_data$month","monthWithMostTurni","monthWithLeastTurni","max","min","_data$month2","_data$max","_data$min","turni","avgTurni","LastYearView","setView","year","Date","getFullYear","yearlyData","lastYearData","previousYearData","minHeight","fontFamily","maxWidth","margin","onClick","background","border","cursor","stats","transition","onMouseOver","e","currentTarget","onMouseOut","marginRight","flexWrap","stat","index","_c4","$RefreshReg$"],"sources":["/Users/marcoaugustocomba/Desktop/Studio Stats/dashboard-pumaisdue/src/LastYearView.js"],"sourcesContent":["import React from 'react';\nimport { ArrowLeft, Calendar, TrendingUp, TrendingDown, Activity, List } from 'lucide-react';\nimport { getYearlyData } from './data';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, ReferenceLine, Label } from 'recharts';\n\nconst monthNames = ['Gen', 'Feb', 'Mar', 'Apr', 'Mag', 'Giu', 'Lug', 'Ago', 'Set', 'Ott', 'Nov', 'Dic'];\n\nconst StatCard = ({ icon, label, value, comparison, backgroundColor }) => (\n  <div style={{\n    backgroundColor,\n    borderRadius: '12px',\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n    padding: '20px',\n    display: 'flex',\n    flexDirection: 'column',\n    flex: '1 1 calc(50% - 10px)',\n    marginBottom: '20px',\n  }}\n  role=\"region\"\n  aria-label={label}>\n    <div style={{ display: 'flex', alignItems: 'center', marginBottom: '12px' }}>\n      {React.cloneElement(icon, { size: 24, color: '#4B5563', 'aria-hidden': 'true' })}\n      <span style={{ marginLeft: '12px', fontSize: '16px', fontWeight: '500', color: '#4B5563' }}>{label}</span>\n    </div>\n    <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#1F2937', marginBottom: '8px' }}>{value}</div>\n    {comparison && (\n      <div style={{ fontSize: '14px' }}>\n        <span style={{ \n          color: comparison === 'N/A' ? 'gray' : (parseFloat(comparison) > 0 ? 'green' : 'red'),\n          fontWeight: 'bold' \n        }}>\n          {comparison} rispetto all'anno precedente\n        </span>\n      </div>\n    )}\n  </div>\n);\n\nconst YearlyChart = ({ data, averageTurni }) => {\n  const chartData = Object.entries(data).map(([month, { totaleTurni }]) => ({\n    name: monthNames[parseInt(month)],\n    turniDoppiaggio: totaleTurni\n  }));\n\n  return (\n    <div style={{\n      backgroundColor: 'white',\n      borderRadius: '12px',\n      boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n      padding: '20px',\n      marginBottom: '20px',\n    }}>\n      <h3 style={{ marginBottom: '20px', color: '#4B5563' }}>Andamento Annuale dei Turni di Doppiaggio</h3>\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <LineChart data={chartData}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n          <Line type=\"monotone\" dataKey=\"turniDoppiaggio\" name=\"Turni di Doppiaggio\" stroke=\"#8884d8\" strokeWidth={2} />\n          <ReferenceLine y={averageTurni} stroke=\"red\" strokeDasharray=\"3 3\">\n            <Label value=\"Media Annuale\" position=\"insideTopLeft\" fill=\"red\" />\n          </ReferenceLine>\n        </LineChart>\n      </ResponsiveContainer>\n      <div style={{ textAlign: 'center', marginTop: '10px', fontSize: '14px', color: '#4B5563' }}>\n        Media Annuale: {averageTurni.toFixed(2)} turni\n      </div>\n    </div>\n  );\n};\n\nconst MonthlyListCard = ({ data }) => (\n  <div style={{\n    backgroundColor: 'white',\n    borderRadius: '12px',\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n    padding: '20px',\n    marginBottom: '20px',\n  }}\n  role=\"region\"\n  aria-label=\"Lista Mensile dei Turni di Doppiaggio\">\n    <div style={{ display: 'flex', alignItems: 'center', marginBottom: '16px' }}>\n      <List size={24} color='#4B5563' aria-hidden=\"true\" />\n      <span style={{ marginLeft: '12px', fontSize: '18px', fontWeight: '500', color: '#4B5563' }}>Lista Mensile dei Turni di Doppiaggio</span>\n    </div>\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\n      {Object.entries(data).map(([month, { totaleTurni }]) => (\n        <div key={month} style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '8px', borderBottom: '1px solid #E5E7EB', paddingBottom: '8px' }}>\n          <span style={{ color: '#4B5563' }}>{monthNames[parseInt(month)]}</span>\n          <span style={{ fontWeight: 'bold', color: '#1F2937' }}>{totaleTurni}</span>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nconst calculateComparison = (current, previous) => {\n  if (typeof current !== 'number' || typeof previous !== 'number' || previous === 0) {\n    return 'N/A';\n  }\n  const diff = current - previous;\n  const percentage = (diff / previous) * 100;\n  return percentage > 0 ? `+${percentage.toFixed(1)}%` : `${percentage.toFixed(1)}%`;\n};\n\nconst processYearlyData = (data) => {\n  if (!data || Object.keys(data).length === 0) return null;\n  \n  const months = Object.keys(data);\n  const totalTurni = months.reduce((sum, month) => sum + (data[month]?.totaleTurni || 0), 0);\n  \n  const [monthWithMostTurni, monthWithLeastTurni] = months.reduce(([max, min], month) => {\n    const turni = data[month]?.totaleTurni || 0;\n    return [\n      turni > (data[max]?.totaleTurni || 0) ? month : max,\n      (turni < (data[min]?.totaleTurni || 0) && turni > 0) ? month : min\n    ];\n  }, [months[0], months[0]]);\n\n  return {\n    totalTurni,\n    avgTurni: totalTurni / months.length,\n    monthWithMostTurni: {\n      month: parseInt(monthWithMostTurni) + 1,\n      value: data[monthWithMostTurni]?.totaleTurni || 0\n    },\n    monthWithLeastTurni: {\n      month: parseInt(monthWithLeastTurni) + 1,\n      value: data[monthWithLeastTurni]?.totaleTurni || 0\n    }\n  };\n};\n\nconst LastYearView = ({ setView, year = new Date().getFullYear() }) => {\n  const yearlyData = getYearlyData(year);\n  const lastYearData = processYearlyData(yearlyData);\n  const previousYearData = processYearlyData(getYearlyData(year - 1));\n\n  if (!lastYearData || !previousYearData) {\n    return (\n      <div style={{\n        backgroundColor: '#F0F9FF',\n        minHeight: '100vh',\n        padding: '24px',\n        fontFamily: \"'Helvetica Neue', Arial, sans-serif\",\n      }}>\n        <div style={{ maxWidth: '800px', margin: '0 auto', textAlign: 'center' }}>\n          <h1>Dati non disponibili</h1>\n          <p>Ci scusiamo, ma i dati per l'anno {year} non sono disponibili al momento.</p>\n          <button \n            onClick={() => setView('main')} \n            style={{\n              background: '#4B5563',\n              color: 'white',\n              border: 'none',\n              borderRadius: '8px',\n              padding: '10px 20px',\n              cursor: 'pointer',\n              fontSize: '16px',\n              marginTop: '20px',\n            }}\n          >\n            Torna alla Dashboard\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  const stats = [\n    { \n      icon: <Calendar />, \n      label: 'Totale Turni di Doppiaggio Annuali', \n      value: lastYearData.totalTurni,\n      comparison: calculateComparison(lastYearData.totalTurni, previousYearData.totalTurni),\n      backgroundColor: '#E6F3FF'\n    },\n    { \n      icon: <Activity />, \n      label: 'Media Turni di Doppiaggio Mensile', \n      value: lastYearData.avgTurni.toFixed(1),\n      comparison: calculateComparison(lastYearData.avgTurni, previousYearData.avgTurni),\n      backgroundColor: '#FFF0E6'\n    },\n    { \n      icon: <TrendingUp />, \n      label: 'Mese con Più Turni di Doppiaggio', \n      value: `${lastYearData.monthWithMostTurni.value} (${monthNames[lastYearData.monthWithMostTurni.month - 1]})`,\n      comparison: calculateComparison(lastYearData.monthWithMostTurni.value, previousYearData.monthWithMostTurni.value),\n      backgroundColor: '#FFF0F0'\n    },\n    { \n      icon: <TrendingDown />, \n      label: 'Mese con Meno Turni di Doppiaggio', \n      value: `${lastYearData.monthWithLeastTurni.value} (${monthNames[lastYearData.monthWithLeastTurni.month - 1]})`,\n      comparison: calculateComparison(lastYearData.monthWithLeastTurni.value, previousYearData.monthWithLeastTurni.value),\n      backgroundColor: '#F0F0FF'\n    },\n  ];\n\n  return (\n    <div style={{\n      backgroundColor: '#F0F9FF',\n      minHeight: '100vh',\n      padding: '24px',\n      fontFamily: \"'Helvetica Neue', Arial, sans-serif\",\n    }}>\n      <div style={{ maxWidth: '800px', margin: '0 auto' }}>\n        <button \n          onClick={() => setView('main')} \n          style={{\n            background: '#4B5563',\n            color: 'white',\n            border: 'none',\n            borderRadius: '8px',\n            padding: '10px 20px',\n            cursor: 'pointer',\n            display: 'flex',\n            alignItems: 'center',\n            fontSize: '16px',\n            marginBottom: '24px',\n            transition: 'background-color 0.3s',\n          }}\n          onMouseOver={(e) => e.currentTarget.style.backgroundColor = '#374151'}\n          onMouseOut={(e) => e.currentTarget.style.backgroundColor = '#4B5563'}\n        >\n          <ArrowLeft size={20} style={{ marginRight: '8px' }} />\n          Torna alla Dashboard\n        </button>\n        \n        <h1 style={{\n          fontSize: '32px',\n          fontWeight: 'bold',\n          textAlign: 'center',\n          marginBottom: '8px',\n          color: '#1F2937',\n        }}>\n          Statistiche Anno\n        </h1>\n        <h2 style={{\n          fontSize: '28px',\n          fontWeight: 'bold',\n          textAlign: 'center',\n          marginBottom: '32px',\n          color: '#4B5563',\n        }}>\n          {year}\n        </h2>\n        \n        <YearlyChart data={yearlyData} averageTurni={lastYearData.avgTurni} />\n        \n        <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between' }}>\n          {stats.map((stat, index) => (\n            <StatCard key={index} {...stat} />\n          ))}\n        </div>\n\n        <MonthlyListCard data={yearlyData} />\n      </div>\n    </div>\n  );\n};\n\nexport default LastYearView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}