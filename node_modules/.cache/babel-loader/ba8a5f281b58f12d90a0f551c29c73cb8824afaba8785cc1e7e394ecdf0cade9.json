{"ast":null,"code":"export const monthlyData = {\n  \"Gennaio 2024\": {\n    totaleTurni: 465,\n    mediaGiornaliera: 15.0,\n    massimoTurni: {\n      valore: 22,\n      giorno: \"15\"\n    },\n    minimoTurni: {\n      valore: 8,\n      giorno: \"01\"\n    }\n  },\n  \"Febbraio 2024\": {\n    totaleTurni: 435,\n    mediaGiornaliera: 15.0,\n    massimoTurni: {\n      valore: 23,\n      giorno: \"20\"\n    },\n    minimoTurni: {\n      valore: 7,\n      giorno: \"29\"\n    }\n  },\n  \"Marzo 2024\": {\n    totaleTurni: 480,\n    mediaGiornaliera: 15.5,\n    massimoTurni: {\n      valore: 24,\n      giorno: \"10\"\n    },\n    minimoTurni: {\n      valore: 9,\n      giorno: \"31\"\n    }\n  },\n  \"Aprile 2024\": {\n    totaleTurni: 450,\n    mediaGiornaliera: 15.0,\n    massimoTurni: {\n      valore: 21,\n      giorno: \"05\"\n    },\n    minimoTurni: {\n      valore: 10,\n      giorno: \"22\"\n    }\n  },\n  \"Maggio 2024\": {\n    totaleTurni: 470,\n    mediaGiornaliera: 15.2,\n    massimoTurni: {\n      valore: 22,\n      giorno: \"18\"\n    },\n    minimoTurni: {\n      valore: 8,\n      giorno: \"01\"\n    }\n  },\n  \"Giugno 2024\": {\n    totaleTurni: 455,\n    mediaGiornaliera: 15.2,\n    massimoTurni: {\n      valore: 23,\n      giorno: \"30\"\n    },\n    minimoTurni: {\n      valore: 9,\n      giorno: \"15\"\n    }\n  },\n  \"Luglio 2024\": {\n    totaleTurni: 475,\n    mediaGiornaliera: 15.3,\n    massimoTurni: {\n      valore: 24,\n      giorno: \"25\"\n    },\n    minimoTurni: {\n      valore: 7,\n      giorno: \"04\"\n    }\n  },\n  \"Agosto 2024\": {\n    totaleTurni: 460,\n    mediaGiornaliera: 14.8,\n    massimoTurni: {\n      valore: 22,\n      giorno: \"12\"\n    },\n    minimoTurni: {\n      valore: 8,\n      giorno: \"31\"\n    }\n  }\n};\n\n// Calcolo delle statistiche annuali fino al mese corrente\nconst calculateYearlyStats = () => {\n  const months = Object.keys(monthlyData);\n  const currentMonthIndex = new Date().getMonth(); // Ottiene l'indice del mese corrente\n  const filteredMonths = months.slice(0, currentMonthIndex + 1); // Prende solo i mesi fino a quello corrente\n\n  const monthsData = filteredMonths.map(month => monthlyData[month]);\n  const totaleTurni = monthsData.reduce((sum, month) => sum + month.totaleTurni, 0);\n  const mediaAnnuale = totaleTurni / filteredMonths.length / 30; // Media su giorni mensili\n  const massimoMensile = Math.max(...monthsData.map(month => month.totaleTurni));\n  const minimoMensile = Math.min(...monthsData.map(month => month.totaleTurni));\n  return {\n    totaleTurni,\n    mediaAnnuale: mediaAnnuale.toFixed(2),\n    massimoMensile,\n    minimoMensile\n  };\n};\nexport const yearlyData = {\n  \"2024\": calculateYearlyStats()\n};\nexport const getLatestMonthData = () => {\n  const months = Object.keys(monthlyData);\n  return monthlyData[months[months.length - 1]]; // Ottiene i dati dell'ultimo mese\n};\nexport const getPreviousMonthData = () => {\n  const months = Object.keys(monthlyData);\n  return monthlyData[months[months.length - 2]]; // Ottiene i dati del penultimo mese\n};\nexport const getAnnualAverageData = () => {\n  return {\n    mediaAnnuale: yearlyData[\"2024\"].mediaAnnuale // Media annuale calcolata fino al mese corrente\n  };\n};\nexport const getYearlyData = () => yearlyData[\"2024\"];","map":{"version":3,"names":["monthlyData","totaleTurni","mediaGiornaliera","massimoTurni","valore","giorno","minimoTurni","calculateYearlyStats","months","Object","keys","currentMonthIndex","Date","getMonth","filteredMonths","slice","monthsData","map","month","reduce","sum","mediaAnnuale","length","massimoMensile","Math","max","minimoMensile","min","toFixed","yearlyData","getLatestMonthData","getPreviousMonthData","getAnnualAverageData","getYearlyData"],"sources":["/Users/marcoaugustocomba/Desktop/Studio Stats/dashboard-pumaisdue/src/data.js"],"sourcesContent":["export const monthlyData = {\n  \"Gennaio 2024\": {\n    totaleTurni: 465,\n    mediaGiornaliera: 15.0,\n    massimoTurni: { valore: 22, giorno: \"15\" },\n    minimoTurni: { valore: 8, giorno: \"01\" }\n  },\n  \"Febbraio 2024\": {\n    totaleTurni: 435,\n    mediaGiornaliera: 15.0,\n    massimoTurni: { valore: 23, giorno: \"20\" },\n    minimoTurni: { valore: 7, giorno: \"29\" }\n  },\n  \"Marzo 2024\": {\n    totaleTurni: 480,\n    mediaGiornaliera: 15.5,\n    massimoTurni: { valore: 24, giorno: \"10\" },\n    minimoTurni: { valore: 9, giorno: \"31\" }\n  },\n  \"Aprile 2024\": {\n    totaleTurni: 450,\n    mediaGiornaliera: 15.0,\n    massimoTurni: { valore: 21, giorno: \"05\" },\n    minimoTurni: { valore: 10, giorno: \"22\" }\n  },\n  \"Maggio 2024\": {\n    totaleTurni: 470,\n    mediaGiornaliera: 15.2,\n    massimoTurni: { valore: 22, giorno: \"18\" },\n    minimoTurni: { valore: 8, giorno: \"01\" }\n  },\n  \"Giugno 2024\": {\n    totaleTurni: 455,\n    mediaGiornaliera: 15.2,\n    massimoTurni: { valore: 23, giorno: \"30\" },\n    minimoTurni: { valore: 9, giorno: \"15\" }\n  },\n  \"Luglio 2024\": {\n    totaleTurni: 475,\n    mediaGiornaliera: 15.3,\n    massimoTurni: { valore: 24, giorno: \"25\" },\n    minimoTurni: { valore: 7, giorno: \"04\" }\n  },\n  \"Agosto 2024\": {\n    totaleTurni: 460,\n    mediaGiornaliera: 14.8,\n    massimoTurni: { valore: 22, giorno: \"12\" },\n    minimoTurni: { valore: 8, giorno: \"31\" }\n  }\n};\n\n// Calcolo delle statistiche annuali fino al mese corrente\nconst calculateYearlyStats = () => {\n  const months = Object.keys(monthlyData);\n  const currentMonthIndex = new Date().getMonth(); // Ottiene l'indice del mese corrente\n  const filteredMonths = months.slice(0, currentMonthIndex + 1); // Prende solo i mesi fino a quello corrente\n  \n  const monthsData = filteredMonths.map(month => monthlyData[month]);\n  const totaleTurni = monthsData.reduce((sum, month) => sum + month.totaleTurni, 0);\n  const mediaAnnuale = totaleTurni / filteredMonths.length / 30; // Media su giorni mensili\n  const massimoMensile = Math.max(...monthsData.map(month => month.totaleTurni));\n  const minimoMensile = Math.min(...monthsData.map(month => month.totaleTurni));\n\n  return {\n    totaleTurni,\n    mediaAnnuale: mediaAnnuale.toFixed(2),\n    massimoMensile,\n    minimoMensile\n  };\n};\n\nexport const yearlyData = {\n  \"2024\": calculateYearlyStats()\n};\n\nexport const getLatestMonthData = () => {\n  const months = Object.keys(monthlyData);\n  return monthlyData[months[months.length - 1]]; // Ottiene i dati dell'ultimo mese\n};\n\nexport const getPreviousMonthData = () => {\n  const months = Object.keys(monthlyData);\n  return monthlyData[months[months.length - 2]]; // Ottiene i dati del penultimo mese\n};\n\nexport const getAnnualAverageData = () => {\n  return {\n    mediaAnnuale: yearlyData[\"2024\"].mediaAnnuale // Media annuale calcolata fino al mese corrente\n  };\n};\n\nexport const getYearlyData = () => yearlyData[\"2024\"];"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG;EACzB,cAAc,EAAE;IACdC,WAAW,EAAE,GAAG;IAChBC,gBAAgB,EAAE,IAAI;IACtBC,YAAY,EAAE;MAAEC,MAAM,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAK,CAAC;IAC1CC,WAAW,EAAE;MAAEF,MAAM,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAK;EACzC,CAAC;EACD,eAAe,EAAE;IACfJ,WAAW,EAAE,GAAG;IAChBC,gBAAgB,EAAE,IAAI;IACtBC,YAAY,EAAE;MAAEC,MAAM,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAK,CAAC;IAC1CC,WAAW,EAAE;MAAEF,MAAM,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAK;EACzC,CAAC;EACD,YAAY,EAAE;IACZJ,WAAW,EAAE,GAAG;IAChBC,gBAAgB,EAAE,IAAI;IACtBC,YAAY,EAAE;MAAEC,MAAM,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAK,CAAC;IAC1CC,WAAW,EAAE;MAAEF,MAAM,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAK;EACzC,CAAC;EACD,aAAa,EAAE;IACbJ,WAAW,EAAE,GAAG;IAChBC,gBAAgB,EAAE,IAAI;IACtBC,YAAY,EAAE;MAAEC,MAAM,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAK,CAAC;IAC1CC,WAAW,EAAE;MAAEF,MAAM,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAK;EAC1C,CAAC;EACD,aAAa,EAAE;IACbJ,WAAW,EAAE,GAAG;IAChBC,gBAAgB,EAAE,IAAI;IACtBC,YAAY,EAAE;MAAEC,MAAM,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAK,CAAC;IAC1CC,WAAW,EAAE;MAAEF,MAAM,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAK;EACzC,CAAC;EACD,aAAa,EAAE;IACbJ,WAAW,EAAE,GAAG;IAChBC,gBAAgB,EAAE,IAAI;IACtBC,YAAY,EAAE;MAAEC,MAAM,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAK,CAAC;IAC1CC,WAAW,EAAE;MAAEF,MAAM,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAK;EACzC,CAAC;EACD,aAAa,EAAE;IACbJ,WAAW,EAAE,GAAG;IAChBC,gBAAgB,EAAE,IAAI;IACtBC,YAAY,EAAE;MAAEC,MAAM,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAK,CAAC;IAC1CC,WAAW,EAAE;MAAEF,MAAM,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAK;EACzC,CAAC;EACD,aAAa,EAAE;IACbJ,WAAW,EAAE,GAAG;IAChBC,gBAAgB,EAAE,IAAI;IACtBC,YAAY,EAAE;MAAEC,MAAM,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAK,CAAC;IAC1CC,WAAW,EAAE;MAAEF,MAAM,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAK;EACzC;AACF,CAAC;;AAED;AACA,MAAME,oBAAoB,GAAGA,CAAA,KAAM;EACjC,MAAMC,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACV,WAAW,CAAC;EACvC,MAAMW,iBAAiB,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;EACjD,MAAMC,cAAc,GAAGN,MAAM,CAACO,KAAK,CAAC,CAAC,EAAEJ,iBAAiB,GAAG,CAAC,CAAC,CAAC,CAAC;;EAE/D,MAAMK,UAAU,GAAGF,cAAc,CAACG,GAAG,CAACC,KAAK,IAAIlB,WAAW,CAACkB,KAAK,CAAC,CAAC;EAClE,MAAMjB,WAAW,GAAGe,UAAU,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEF,KAAK,KAAKE,GAAG,GAAGF,KAAK,CAACjB,WAAW,EAAE,CAAC,CAAC;EACjF,MAAMoB,YAAY,GAAGpB,WAAW,GAAGa,cAAc,CAACQ,MAAM,GAAG,EAAE,CAAC,CAAC;EAC/D,MAAMC,cAAc,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGT,UAAU,CAACC,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACjB,WAAW,CAAC,CAAC;EAC9E,MAAMyB,aAAa,GAAGF,IAAI,CAACG,GAAG,CAAC,GAAGX,UAAU,CAACC,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACjB,WAAW,CAAC,CAAC;EAE7E,OAAO;IACLA,WAAW;IACXoB,YAAY,EAAEA,YAAY,CAACO,OAAO,CAAC,CAAC,CAAC;IACrCL,cAAc;IACdG;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMG,UAAU,GAAG;EACxB,MAAM,EAAEtB,oBAAoB,CAAC;AAC/B,CAAC;AAED,OAAO,MAAMuB,kBAAkB,GAAGA,CAAA,KAAM;EACtC,MAAMtB,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACV,WAAW,CAAC;EACvC,OAAOA,WAAW,CAACQ,MAAM,CAACA,MAAM,CAACc,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC;AAED,OAAO,MAAMS,oBAAoB,GAAGA,CAAA,KAAM;EACxC,MAAMvB,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACV,WAAW,CAAC;EACvC,OAAOA,WAAW,CAACQ,MAAM,CAACA,MAAM,CAACc,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC;AAED,OAAO,MAAMU,oBAAoB,GAAGA,CAAA,KAAM;EACxC,OAAO;IACLX,YAAY,EAAEQ,UAAU,CAAC,MAAM,CAAC,CAACR,YAAY,CAAC;EAChD,CAAC;AACH,CAAC;AAED,OAAO,MAAMY,aAAa,GAAGA,CAAA,KAAMJ,UAAU,CAAC,MAAM,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}