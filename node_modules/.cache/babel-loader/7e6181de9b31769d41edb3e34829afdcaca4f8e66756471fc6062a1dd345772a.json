{"ast":null,"code":"export const monthlyData = {\n  \"Gennaio 2024\": {\n    totaleTurni: 465,\n    mediaGiornaliera: 15.0,\n    massimoTurni: {\n      valore: 22,\n      giorno: \"15\"\n    },\n    minimoTurni: {\n      valore: 8,\n      giorno: \"01\"\n    }\n  },\n  \"Febbraio 2024\": {\n    totaleTurni: 435,\n    mediaGiornaliera: 15.0,\n    massimoTurni: {\n      valore: 23,\n      giorno: \"20\"\n    },\n    minimoTurni: {\n      valore: 7,\n      giorno: \"29\"\n    }\n  },\n  \"Marzo 2024\": {\n    totaleTurni: 480,\n    mediaGiornaliera: 15.5,\n    massimoTurni: {\n      valore: 24,\n      giorno: \"10\"\n    },\n    minimoTurni: {\n      valore: 9,\n      giorno: \"31\"\n    }\n  },\n  \"Aprile 2024\": {\n    totaleTurni: 450,\n    mediaGiornaliera: 15.0,\n    massimoTurni: {\n      valore: 21,\n      giorno: \"05\"\n    },\n    minimoTurni: {\n      valore: 10,\n      giorno: \"22\"\n    }\n  },\n  \"Maggio 2024\": {\n    totaleTurni: 470,\n    mediaGiornaliera: 15.2,\n    massimoTurni: {\n      valore: 22,\n      giorno: \"18\"\n    },\n    minimoTurni: {\n      valore: 8,\n      giorno: \"01\"\n    }\n  },\n  \"Giugno 2024\": {\n    totaleTurni: 455,\n    mediaGiornaliera: 15.2,\n    massimoTurni: {\n      valore: 23,\n      giorno: \"30\"\n    },\n    minimoTurni: {\n      valore: 9,\n      giorno: \"15\"\n    }\n  },\n  \"Luglio 2024\": {\n    totaleTurni: 475,\n    mediaGiornaliera: 15.3,\n    massimoTurni: {\n      valore: 24,\n      giorno: \"25\"\n    },\n    minimoTurni: {\n      valore: 7,\n      giorno: \"04\"\n    }\n  },\n  \"Agosto 2024\": {\n    totaleTurni: 460,\n    mediaGiornaliera: 14.8,\n    massimoTurni: {\n      valore: 22,\n      giorno: \"12\"\n    },\n    minimoTurni: {\n      valore: 8,\n      giorno: \"31\"\n    }\n  }\n};\n\n// Calcoli automatici per il riepilogo annuale\nconst calculateYearlyStats = () => {\n  const months = Object.values(monthlyData);\n  const totaleTurni = months.reduce((sum, month) => sum + month.totaleTurni, 0);\n  const mediaAnnuale = totaleTurni / months.length / 30; // Assumendo una media di 30 giorni per mese\n  const massimoMensile = Math.max(...months.map(month => month.totaleTurni));\n  const minimoMensile = Math.min(...months.map(month => month.totaleTurni));\n  return {\n    totaleTurni,\n    mediaAnnuale: mediaAnnuale.toFixed(2),\n    massimoMensile,\n    minimoMensile\n  };\n};\nexport const yearlyData = {\n  \"2024\": calculateYearlyStats()\n};\nexport const getLatestMonthData = () => {\n  const months = Object.keys(monthlyData);\n  return monthlyData[months[months.length - 1]];\n};\nexport const getYearlyData = () => yearlyData[\"2024\"];","map":{"version":3,"names":["monthlyData","totaleTurni","mediaGiornaliera","massimoTurni","valore","giorno","minimoTurni","calculateYearlyStats","months","Object","values","reduce","sum","month","mediaAnnuale","length","massimoMensile","Math","max","map","minimoMensile","min","toFixed","yearlyData","getLatestMonthData","keys","getYearlyData"],"sources":["/Users/marcoaugustocomba/Desktop/Studio Stats/dashboard-pumaisdue/src/data.js"],"sourcesContent":["export const monthlyData = {\n  \"Gennaio 2024\": {\n    totaleTurni: 465,\n    mediaGiornaliera: 15.0,\n    massimoTurni: { valore: 22, giorno: \"15\" },\n    minimoTurni: { valore: 8, giorno: \"01\" }\n  },\n  \"Febbraio 2024\": {\n    totaleTurni: 435,\n    mediaGiornaliera: 15.0,\n    massimoTurni: { valore: 23, giorno: \"20\" },\n    minimoTurni: { valore: 7, giorno: \"29\" }\n  },\n  \"Marzo 2024\": {\n    totaleTurni: 480,\n    mediaGiornaliera: 15.5,\n    massimoTurni: { valore: 24, giorno: \"10\" },\n    minimoTurni: { valore: 9, giorno: \"31\" }\n  },\n  \"Aprile 2024\": {\n    totaleTurni: 450,\n    mediaGiornaliera: 15.0,\n    massimoTurni: { valore: 21, giorno: \"05\" },\n    minimoTurni: { valore: 10, giorno: \"22\" }\n  },\n  \"Maggio 2024\": {\n    totaleTurni: 470,\n    mediaGiornaliera: 15.2,\n    massimoTurni: { valore: 22, giorno: \"18\" },\n    minimoTurni: { valore: 8, giorno: \"01\" }\n  },\n  \"Giugno 2024\": {\n    totaleTurni: 455,\n    mediaGiornaliera: 15.2,\n    massimoTurni: { valore: 23, giorno: \"30\" },\n    minimoTurni: { valore: 9, giorno: \"15\" }\n  },\n  \"Luglio 2024\": {\n    totaleTurni: 475,\n    mediaGiornaliera: 15.3,\n    massimoTurni: { valore: 24, giorno: \"25\" },\n    minimoTurni: { valore: 7, giorno: \"04\" }\n  },\n  \"Agosto 2024\": {\n    totaleTurni: 460,\n    mediaGiornaliera: 14.8,\n    massimoTurni: { valore: 22, giorno: \"12\" },\n    minimoTurni: { valore: 8, giorno: \"31\" }\n  }\n};\n\n// Calcoli automatici per il riepilogo annuale\nconst calculateYearlyStats = () => {\n  const months = Object.values(monthlyData);\n  const totaleTurni = months.reduce((sum, month) => sum + month.totaleTurni, 0);\n  const mediaAnnuale = totaleTurni / months.length / 30; // Assumendo una media di 30 giorni per mese\n  const massimoMensile = Math.max(...months.map(month => month.totaleTurni));\n  const minimoMensile = Math.min(...months.map(month => month.totaleTurni));\n\n  return {\n    totaleTurni,\n    mediaAnnuale: mediaAnnuale.toFixed(2),\n    massimoMensile,\n    minimoMensile\n  };\n};\n\nexport const yearlyData = {\n  \"2024\": calculateYearlyStats()\n};\n\nexport const getLatestMonthData = () => {\n  const months = Object.keys(monthlyData);\n  return monthlyData[months[months.length - 1]];\n};\n\nexport const getYearlyData = () => yearlyData[\"2024\"];"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}