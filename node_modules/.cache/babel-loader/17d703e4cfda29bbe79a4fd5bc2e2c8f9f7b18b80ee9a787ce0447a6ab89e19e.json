{"ast":null,"code":"var _jsxFileName = \"/Users/marcoaugustocomba/Desktop/Studio Stats/dashboard-pumaisdue/src/LastYearView.js\";\nimport React from 'react';\nimport { ArrowLeft, Calendar, TrendingUp, TrendingDown, Activity, List } from 'lucide-react';\nimport { getYearlyData } from './data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatCard = ({\n  icon,\n  label,\n  value,\n  subValue,\n  comparison,\n  backgroundColor\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    backgroundColor: backgroundColor,\n    borderRadius: '12px',\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n    padding: '24px',\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: '24px'\n  },\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      marginBottom: '16px'\n    },\n    children: [/*#__PURE__*/React.cloneElement(icon, {\n      size: 24,\n      color: '#4B5563'\n    }), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        marginLeft: '12px',\n        fontSize: '18px',\n        fontWeight: '500',\n        color: '#4B5563'\n      },\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontSize: '36px',\n      fontWeight: 'bold',\n      color: '#1F2937',\n      marginBottom: '8px'\n    },\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this), subValue && /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontSize: '14px',\n      color: '#6B7280'\n    },\n    children: subValue\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 18\n  }, this), comparison && /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '8px',\n      fontSize: '14px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: comparison === 'N/A' ? 'gray' : parseFloat(comparison) > 0 ? 'green' : 'red'\n      },\n      children: [comparison, \" rispetto all'anno precedente\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n_c = StatCard;\nconst calculateComparison = (current, previous) => {\n  if (typeof current !== 'number' || typeof previous !== 'number') {\n    return 'N/A';\n  }\n  const diff = current - previous;\n  const percentage = diff / previous * 100;\n  return percentage > 0 ? `+${percentage.toFixed(1)}%` : `${percentage.toFixed(1)}%`;\n};\nconst processYearlyData = data => {\n  if (!data) return null;\n  const months = Object.keys(data);\n  const totalTurni = months.reduce((sum, month) => sum + data[month].totaleTurni, 0);\n  const monthWithMostTurni = months.reduce((max, month) => data[month].totaleTurni > data[max].totaleTurni ? month : max, months[0]);\n  const monthWithLeastTurni = months.reduce((min, month) => data[month].totaleTurni < data[min].totaleTurni ? month : min, months[0]);\n  return {\n    totalTurni,\n    avgTurni: totalTurni / months.length,\n    monthWithMostTurni: {\n      month: parseInt(monthWithMostTurni) + 1,\n      value: data[monthWithMostTurni].totaleTurni\n    },\n    monthWithLeastTurni: {\n      month: parseInt(monthWithLeastTurni) + 1,\n      value: data[monthWithLeastTurni].totaleTurni\n    }\n  };\n};\nconst MonthlyListCard = ({\n  data,\n  backgroundColor\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    backgroundColor: backgroundColor,\n    borderRadius: '12px',\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n    padding: '24px',\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: '24px'\n  },\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      marginBottom: '16px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      size: 24,\n      color: \"#4B5563\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        marginLeft: '12px',\n        fontSize: '18px',\n        fontWeight: '500',\n        color: '#4B5563'\n      },\n      children: \"Lista Mensile dei Turni\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: Object.entries(data).map(([month, {\n      totaleTurni\n    }]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginBottom: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: '#4B5563'\n        },\n        children: monthNames[parseInt(month)]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontWeight: 'bold',\n          color: '#1F2937'\n        },\n        children: totaleTurni\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, month, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 67,\n  columnNumber: 3\n}, this);\n_c2 = MonthlyListCard;\nconst LastYearView = ({\n  setView\n}) => {\n  const currentYear = new Date().getFullYear();\n  const yearlyData = getYearlyData(currentYear);\n  const lastYearData = processYearlyData(yearlyData);\n  const previousYearData = processYearlyData(getYearlyData(currentYear - 1));\n  if (!lastYearData || !previousYearData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error loading data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 12\n    }, this);\n  }\n  const monthNames = ['Gennaio', 'Febbraio', 'Marzo', 'Aprile', 'Maggio', 'Giugno', 'Luglio', 'Agosto', 'Settembre', 'Ottobre', 'Novembre', 'Dicembre'];\n  const stats = [{\n    icon: /*#__PURE__*/_jsxDEV(Calendar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this),\n    label: 'Totale Turni Annuali',\n    value: lastYearData.totalTurni,\n    comparison: calculateComparison(lastYearData.totalTurni, previousYearData.totalTurni),\n    backgroundColor: '#E6F3FF'\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(Activity, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this),\n    label: 'Media Turni Mensile',\n    value: lastYearData.avgTurni.toFixed(1),\n    comparison: calculateComparison(lastYearData.avgTurni, previousYearData.avgTurni),\n    backgroundColor: '#FFF0E6'\n  }, {\n    component: MonthlyListCard,\n    data: yearlyData,\n    backgroundColor: '#E6FFE6'\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(TrendingUp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this),\n    label: 'Mese con PiÃ¹ Turni',\n    value: `${lastYearData.monthWithMostTurni.value} (${monthNames[lastYearData.monthWithMostTurni.month - 1]})`,\n    comparison: calculateComparison(lastYearData.monthWithMostTurni.value, previousYearData.monthWithMostTurni.value),\n    backgroundColor: '#FFF0F0'\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(TrendingDown, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this),\n    label: 'Mese con Meno Turni',\n    value: `${lastYearData.monthWithLeastTurni.value} (${monthNames[lastYearData.monthWithLeastTurni.month - 1]})`,\n    comparison: calculateComparison(lastYearData.monthWithLeastTurni.value, previousYearData.monthWithLeastTurni.value),\n    backgroundColor: '#F0F0FF'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: '#F0F9FF',\n      minHeight: '100vh',\n      padding: '24px',\n      fontFamily: \"'Helvetica Neue', Arial, sans-serif\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: '600px',\n        margin: '0 auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: stats.map((stat, index) => stat.component ? /*#__PURE__*/_jsxDEV(stat.component, {\n          ...stat\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(StatCard, {\n          ...stat\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_c3 = LastYearView;\nexport default LastYearView;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StatCard\");\n$RefreshReg$(_c2, \"MonthlyListCard\");\n$RefreshReg$(_c3, \"LastYearView\");","map":{"version":3,"names":["React","ArrowLeft","Calendar","TrendingUp","TrendingDown","Activity","List","getYearlyData","jsxDEV","_jsxDEV","StatCard","icon","label","value","subValue","comparison","backgroundColor","style","borderRadius","boxShadow","padding","display","flexDirection","marginBottom","children","alignItems","cloneElement","size","color","marginLeft","fontSize","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","parseFloat","_c","calculateComparison","current","previous","diff","percentage","toFixed","processYearlyData","data","months","Object","keys","totalTurni","reduce","sum","month","totaleTurni","monthWithMostTurni","max","monthWithLeastTurni","min","avgTurni","length","parseInt","MonthlyListCard","entries","map","justifyContent","monthNames","_c2","LastYearView","setView","currentYear","Date","getFullYear","yearlyData","lastYearData","previousYearData","stats","component","minHeight","fontFamily","maxWidth","margin","stat","index","_c3","$RefreshReg$"],"sources":["/Users/marcoaugustocomba/Desktop/Studio Stats/dashboard-pumaisdue/src/LastYearView.js"],"sourcesContent":["import React from 'react';\nimport { ArrowLeft, Calendar, TrendingUp, TrendingDown, Activity, List } from 'lucide-react';\nimport { getYearlyData } from './data';\n\nconst StatCard = ({ icon, label, value, subValue, comparison, backgroundColor }) => (\n  <div style={{\n    backgroundColor: backgroundColor,\n    borderRadius: '12px',\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n    padding: '24px',\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: '24px',\n  }}>\n    <div style={{ display: 'flex', alignItems: 'center', marginBottom: '16px' }}>\n      {React.cloneElement(icon, { size: 24, color: '#4B5563' })}\n      <span style={{ marginLeft: '12px', fontSize: '18px', fontWeight: '500', color: '#4B5563' }}>{label}</span>\n    </div>\n    <div style={{ fontSize: '36px', fontWeight: 'bold', color: '#1F2937', marginBottom: '8px' }}>{value}</div>\n    {subValue && <div style={{ fontSize: '14px', color: '#6B7280' }}>{subValue}</div>}\n    {comparison && (\n      <div style={{ marginTop: '8px', fontSize: '14px' }}>\n        <div style={{ color: comparison === 'N/A' ? 'gray' : (parseFloat(comparison) > 0 ? 'green' : 'red') }}>\n          {comparison} rispetto all'anno precedente\n        </div>\n      </div>\n    )}\n  </div>\n);\n\nconst calculateComparison = (current, previous) => {\n  if (typeof current !== 'number' || typeof previous !== 'number') {\n    return 'N/A';\n  }\n  const diff = current - previous;\n  const percentage = (diff / previous) * 100;\n  return percentage > 0 ? `+${percentage.toFixed(1)}%` : `${percentage.toFixed(1)}%`;\n};\n\nconst processYearlyData = (data) => {\n  if (!data) return null;\n  \n  const months = Object.keys(data);\n  const totalTurni = months.reduce((sum, month) => sum + data[month].totaleTurni, 0);\n  \n  const monthWithMostTurni = months.reduce((max, month) => \n    data[month].totaleTurni > data[max].totaleTurni ? month : max, months[0]);\n  \n  const monthWithLeastTurni = months.reduce((min, month) => \n    data[month].totaleTurni < data[min].totaleTurni ? month : min, months[0]);\n\n  return {\n    totalTurni,\n    avgTurni: totalTurni / months.length,\n    monthWithMostTurni: {\n      month: parseInt(monthWithMostTurni) + 1,\n      value: data[monthWithMostTurni].totaleTurni\n    },\n    monthWithLeastTurni: {\n      month: parseInt(monthWithLeastTurni) + 1,\n      value: data[monthWithLeastTurni].totaleTurni\n    }\n  };\n};\n\nconst MonthlyListCard = ({ data, backgroundColor }) => (\n  <div style={{\n    backgroundColor: backgroundColor,\n    borderRadius: '12px',\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n    padding: '24px',\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: '24px',\n  }}>\n    <div style={{ display: 'flex', alignItems: 'center', marginBottom: '16px' }}>\n      <List size={24} color='#4B5563' />\n      <span style={{ marginLeft: '12px', fontSize: '18px', fontWeight: '500', color: '#4B5563' }}>Lista Mensile dei Turni</span>\n    </div>\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\n      {Object.entries(data).map(([month, { totaleTurni }]) => (\n        <div key={month} style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '8px' }}>\n          <span style={{ color: '#4B5563' }}>{monthNames[parseInt(month)]}</span>\n          <span style={{ fontWeight: 'bold', color: '#1F2937' }}>{totaleTurni}</span>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nconst LastYearView = ({ setView }) => {\n  const currentYear = new Date().getFullYear();\n  const yearlyData = getYearlyData(currentYear);\n  const lastYearData = processYearlyData(yearlyData);\n  const previousYearData = processYearlyData(getYearlyData(currentYear - 1));\n\n  if (!lastYearData || !previousYearData) {\n    return <div>Error loading data</div>;\n  }\n\n  const monthNames = ['Gennaio', 'Febbraio', 'Marzo', 'Aprile', 'Maggio', 'Giugno', 'Luglio', 'Agosto', 'Settembre', 'Ottobre', 'Novembre', 'Dicembre'];\n\n  const stats = [\n    { \n      icon: <Calendar />, \n      label: 'Totale Turni Annuali', \n      value: lastYearData.totalTurni,\n      comparison: calculateComparison(lastYearData.totalTurni, previousYearData.totalTurni),\n      backgroundColor: '#E6F3FF'\n    },\n    { \n      icon: <Activity />, \n      label: 'Media Turni Mensile', \n      value: lastYearData.avgTurni.toFixed(1),\n      comparison: calculateComparison(lastYearData.avgTurni, previousYearData.avgTurni),\n      backgroundColor: '#FFF0E6'\n    },\n    {\n      component: MonthlyListCard,\n      data: yearlyData,\n      backgroundColor: '#E6FFE6'\n    },\n    { \n      icon: <TrendingUp />, \n      label: 'Mese con PiÃ¹ Turni', \n      value: `${lastYearData.monthWithMostTurni.value} (${monthNames[lastYearData.monthWithMostTurni.month - 1]})`,\n      comparison: calculateComparison(lastYearData.monthWithMostTurni.value, previousYearData.monthWithMostTurni.value),\n      backgroundColor: '#FFF0F0'\n    },\n    { \n      icon: <TrendingDown />, \n      label: 'Mese con Meno Turni', \n      value: `${lastYearData.monthWithLeastTurni.value} (${monthNames[lastYearData.monthWithLeastTurni.month - 1]})`,\n      comparison: calculateComparison(lastYearData.monthWithLeastTurni.value, previousYearData.monthWithLeastTurni.value),\n      backgroundColor: '#F0F0FF'\n    },\n  ];\n\n  return (\n    <div style={{\n      backgroundColor: '#F0F9FF',\n      minHeight: '100vh',\n      padding: '24px',\n      fontFamily: \"'Helvetica Neue', Arial, sans-serif\",\n    }}>\n      <div style={{ maxWidth: '600px', margin: '0 auto' }}>\n        {/* ... Il resto del codice rimane invariato ... */}\n        \n        <div>\n          {stats.map((stat, index) => (\n            stat.component ? \n              <stat.component key={index} {...stat} /> :\n              <StatCard key={index} {...stat} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LastYearView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}