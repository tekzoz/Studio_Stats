{"ast":null,"code":"import React from'react';import{ArrowLeft,Calendar,TrendingUp,TrendingDown,Activity,List}from'lucide-react';import{getYearlyData}from'./data';import{LineChart,Line,XAxis,YAxis,CartesianGrid,Tooltip,ResponsiveContainer,ReferenceLine,Label}from'recharts';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const monthNames=['Gen','Feb','Mar','Apr','Mag','Giu','Lug','Ago','Set','Ott','Nov','Dic'];const StatCard=_ref=>{let{icon,label,value,comparison,backgroundColor}=_ref;return/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor,borderRadius:'12px',boxShadow:'0 4px 6px rgba(0, 0, 0, 0.1)',padding:'20px',display:'flex',flexDirection:'column',flex:'1 1 calc(50% - 10px)',marginBottom:'20px'},role:\"region\",\"aria-label\":label,children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',marginBottom:'12px'},children:[/*#__PURE__*/React.cloneElement(icon,{size:24,color:'#4B5563','aria-hidden':'true'}),/*#__PURE__*/_jsx(\"span\",{style:{marginLeft:'12px',fontSize:'16px',fontWeight:'500',color:'#4B5563'},children:label})]}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'24px',fontWeight:'bold',color:'#1F2937',marginBottom:'8px'},children:value}),comparison&&/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'14px'},children:/*#__PURE__*/_jsxs(\"span\",{style:{color:comparison==='N/A'?'gray':parseFloat(comparison)>0?'green':'red',fontWeight:'bold'},children:[comparison,\" rispetto all'anno precedente\"]})})]});};const YearlyChart=_ref2=>{let{data,averageTurni}=_ref2;const chartData=Object.entries(data).map(_ref3=>{let[month,{totaleTurni}]=_ref3;return{name:monthNames[parseInt(month)],turniDoppiaggio:totaleTurni};});return/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'white',borderRadius:'12px',boxShadow:'0 4px 6px rgba(0, 0, 0, 0.1)',padding:'20px',marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{marginBottom:'20px',color:'#4B5563'},children:\"Andamento Annuale dei Turni di Doppiaggio\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(LineChart,{data:chartData,children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"turniDoppiaggio\",name:\"Turni di Doppiaggio\",stroke:\"#8884d8\",strokeWidth:2}),/*#__PURE__*/_jsx(ReferenceLine,{y:averageTurni,stroke:\"red\",strokeDasharray:\"3 3\",children:/*#__PURE__*/_jsx(Label,{value:\"Media Annuale\",position:\"insideTopLeft\",fill:\"red\"})})]})}),/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',marginTop:'10px',fontSize:'14px',color:'#4B5563'},children:[\"Media Annuale: \",averageTurni.toFixed(2),\" turni\"]})]});};const MonthlyListCard=_ref4=>{let{data}=_ref4;return/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'white',borderRadius:'12px',boxShadow:'0 4px 6px rgba(0, 0, 0, 0.1)',padding:'20px',marginBottom:'20px'},role:\"region\",\"aria-label\":\"Lista Mensile dei Turni di Doppiaggio\",children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',marginBottom:'16px'},children:[/*#__PURE__*/_jsx(List,{size:24,color:\"#4B5563\",\"aria-hidden\":\"true\"}),/*#__PURE__*/_jsx(\"span\",{style:{marginLeft:'12px',fontSize:'18px',fontWeight:'500',color:'#4B5563'},children:\"Lista Mensile dei Turni di Doppiaggio\"})]}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',flexDirection:'column'},children:Object.entries(data).map(_ref5=>{let[month,{totaleTurni}]=_ref5;return/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',marginBottom:'8px',borderBottom:'1px solid #E5E7EB',paddingBottom:'8px'},children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'#4B5563'},children:monthNames[parseInt(month)]}),/*#__PURE__*/_jsx(\"span\",{style:{fontWeight:'bold',color:'#1F2937'},children:totaleTurni})]},month);})})]});};const calculateComparison=(current,previous)=>{if(typeof current!=='number'||typeof previous!=='number'||previous===0){return'N/A';}const diff=current-previous;const percentage=diff/previous*100;return percentage>0?`+${percentage.toFixed(1)}%`:`${percentage.toFixed(1)}%`;};const processYearlyData=data=>{var _data$monthWithMostTu,_data$monthWithLeastT;if(!data||Object.keys(data).length===0)return null;const months=Object.keys(data);const totalTurni=months.reduce((sum,month)=>{var _data$month;return sum+(((_data$month=data[month])===null||_data$month===void 0?void 0:_data$month.totaleTurni)||0);},0);const[monthWithMostTurni,monthWithLeastTurni]=months.reduce((_ref6,month)=>{var _data$month2,_data$max,_data$min;let[max,min]=_ref6;const turni=((_data$month2=data[month])===null||_data$month2===void 0?void 0:_data$month2.totaleTurni)||0;return[turni>(((_data$max=data[max])===null||_data$max===void 0?void 0:_data$max.totaleTurni)||0)?month:max,turni<(((_data$min=data[min])===null||_data$min===void 0?void 0:_data$min.totaleTurni)||0)&&turni>0?month:min];},[months[0],months[0]]);return{totalTurni,avgTurni:totalTurni/months.length,monthWithMostTurni:{month:parseInt(monthWithMostTurni)+1,value:((_data$monthWithMostTu=data[monthWithMostTurni])===null||_data$monthWithMostTu===void 0?void 0:_data$monthWithMostTu.totaleTurni)||0},monthWithLeastTurni:{month:parseInt(monthWithLeastTurni)+1,value:((_data$monthWithLeastT=data[monthWithLeastTurni])===null||_data$monthWithLeastT===void 0?void 0:_data$monthWithLeastT.totaleTurni)||0}};};const LastYearView=_ref7=>{let{setView,year=new Date().getFullYear()}=_ref7;const yearlyData=getYearlyData(year);const lastYearData=processYearlyData(yearlyData);const previousYearData=processYearlyData(getYearlyData(year-1));if(!lastYearData||!previousYearData){return/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:'#F0F9FF',minHeight:'100vh',padding:'24px',fontFamily:\"'Helvetica Neue', Arial, sans-serif\"},children:/*#__PURE__*/_jsxs(\"div\",{style:{maxWidth:'800px',margin:'0 auto',textAlign:'center'},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Dati non disponibili\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Ci scusiamo, ma i dati per l'anno \",year,\" non sono disponibili al momento.\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setView('main'),style:{background:'#4B5563',color:'white',border:'none',borderRadius:'8px',padding:'10px 20px',cursor:'pointer',fontSize:'16px',marginTop:'20px'},children:\"Torna alla Dashboard\"})]})});}const stats=[{icon:/*#__PURE__*/_jsx(Calendar,{}),label:'Totale Turni di Doppiaggio Annuali',value:lastYearData.totalTurni,comparison:calculateComparison(lastYearData.totalTurni,previousYearData.totalTurni),backgroundColor:'#E6F3FF'},{icon:/*#__PURE__*/_jsx(Activity,{}),label:'Media Turni di Doppiaggio Mensile',value:lastYearData.avgTurni.toFixed(1),comparison:calculateComparison(lastYearData.avgTurni,previousYearData.avgTurni),backgroundColor:'#FFF0E6'},{icon:/*#__PURE__*/_jsx(TrendingUp,{}),label:'Mese con PiÃ¹ Turni di Doppiaggio',value:`${lastYearData.monthWithMostTurni.value} (${monthNames[lastYearData.monthWithMostTurni.month-1]})`,comparison:calculateComparison(lastYearData.monthWithMostTurni.value,previousYearData.monthWithMostTurni.value),backgroundColor:'#FFF0F0'},{icon:/*#__PURE__*/_jsx(TrendingDown,{}),label:'Mese con Meno Turni di Doppiaggio',value:`${lastYearData.monthWithLeastTurni.value} (${monthNames[lastYearData.monthWithLeastTurni.month-1]})`,comparison:calculateComparison(lastYearData.monthWithLeastTurni.value,previousYearData.monthWithLeastTurni.value),backgroundColor:'#F0F0FF'}];return/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:'#F0F9FF',minHeight:'100vh',padding:'24px',fontFamily:\"'Helvetica Neue', Arial, sans-serif\"},children:/*#__PURE__*/_jsxs(\"div\",{style:{maxWidth:'800px',margin:'0 auto'},children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setView('main'),style:{background:'#4B5563',color:'white',border:'none',borderRadius:'8px',padding:'10px 20px',cursor:'pointer',display:'flex',alignItems:'center',fontSize:'16px',marginBottom:'24px',transition:'background-color 0.3s'},onMouseOver:e=>e.currentTarget.style.backgroundColor='#374151',onMouseOut:e=>e.currentTarget.style.backgroundColor='#4B5563',children:[/*#__PURE__*/_jsx(ArrowLeft,{size:20,style:{marginRight:'8px'}}),\"Torna alla Dashboard\"]}),/*#__PURE__*/_jsx(\"h1\",{style:{fontSize:'32px',fontWeight:'bold',textAlign:'center',marginBottom:'8px',color:'#1F2937'},children:\"Statistiche Anno\"}),/*#__PURE__*/_jsx(\"h2\",{style:{fontSize:'28px',fontWeight:'bold',textAlign:'center',marginBottom:'32px',color:'#4B5563'},children:year}),/*#__PURE__*/_jsx(YearlyChart,{data:yearlyData,averageTurni:lastYearData.avgTurni}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',flexWrap:'wrap',justifyContent:'space-between'},children:stats.map((stat,index)=>/*#__PURE__*/_jsx(StatCard,{...stat},index))}),/*#__PURE__*/_jsx(MonthlyListCard,{data:yearlyData})]})});};export default LastYearView;","map":{"version":3,"names":["React","ArrowLeft","Calendar","TrendingUp","TrendingDown","Activity","List","getYearlyData","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","ReferenceLine","Label","jsx","_jsx","jsxs","_jsxs","monthNames","StatCard","_ref","icon","label","value","comparison","backgroundColor","style","borderRadius","boxShadow","padding","display","flexDirection","flex","marginBottom","role","children","alignItems","cloneElement","size","color","marginLeft","fontSize","fontWeight","parseFloat","YearlyChart","_ref2","data","averageTurni","chartData","Object","entries","map","_ref3","month","totaleTurni","name","parseInt","turniDoppiaggio","width","height","strokeDasharray","dataKey","type","stroke","strokeWidth","y","position","fill","textAlign","marginTop","toFixed","MonthlyListCard","_ref4","_ref5","justifyContent","borderBottom","paddingBottom","calculateComparison","current","previous","diff","percentage","processYearlyData","_data$monthWithMostTu","_data$monthWithLeastT","keys","length","months","totalTurni","reduce","sum","_data$month","monthWithMostTurni","monthWithLeastTurni","_ref6","_data$month2","_data$max","_data$min","max","min","turni","avgTurni","LastYearView","_ref7","setView","year","Date","getFullYear","yearlyData","lastYearData","previousYearData","minHeight","fontFamily","maxWidth","margin","onClick","background","border","cursor","stats","transition","onMouseOver","e","currentTarget","onMouseOut","marginRight","flexWrap","stat","index"],"sources":["/Users/marcoaugustocomba/Desktop/Studio Stats/dashboard-pumaisdue/src/LastYearView.js"],"sourcesContent":["import React from 'react';\nimport { ArrowLeft, Calendar, TrendingUp, TrendingDown, Activity, List } from 'lucide-react';\nimport { getYearlyData } from './data';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, ReferenceLine, Label } from 'recharts';\n\nconst monthNames = ['Gen', 'Feb', 'Mar', 'Apr', 'Mag', 'Giu', 'Lug', 'Ago', 'Set', 'Ott', 'Nov', 'Dic'];\n\nconst StatCard = ({ icon, label, value, comparison, backgroundColor }) => (\n  <div style={{\n    backgroundColor,\n    borderRadius: '12px',\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n    padding: '20px',\n    display: 'flex',\n    flexDirection: 'column',\n    flex: '1 1 calc(50% - 10px)',\n    marginBottom: '20px',\n  }}\n  role=\"region\"\n  aria-label={label}>\n    <div style={{ display: 'flex', alignItems: 'center', marginBottom: '12px' }}>\n      {React.cloneElement(icon, { size: 24, color: '#4B5563', 'aria-hidden': 'true' })}\n      <span style={{ marginLeft: '12px', fontSize: '16px', fontWeight: '500', color: '#4B5563' }}>{label}</span>\n    </div>\n    <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#1F2937', marginBottom: '8px' }}>{value}</div>\n    {comparison && (\n      <div style={{ fontSize: '14px' }}>\n        <span style={{ \n          color: comparison === 'N/A' ? 'gray' : (parseFloat(comparison) > 0 ? 'green' : 'red'),\n          fontWeight: 'bold' \n        }}>\n          {comparison} rispetto all'anno precedente\n        </span>\n      </div>\n    )}\n  </div>\n);\n\nconst YearlyChart = ({ data, averageTurni }) => {\n  const chartData = Object.entries(data).map(([month, { totaleTurni }]) => ({\n    name: monthNames[parseInt(month)],\n    turniDoppiaggio: totaleTurni\n  }));\n\n  return (\n    <div style={{\n      backgroundColor: 'white',\n      borderRadius: '12px',\n      boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n      padding: '20px',\n      marginBottom: '20px',\n    }}>\n      <h3 style={{ marginBottom: '20px', color: '#4B5563' }}>Andamento Annuale dei Turni di Doppiaggio</h3>\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <LineChart data={chartData}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n          <Line type=\"monotone\" dataKey=\"turniDoppiaggio\" name=\"Turni di Doppiaggio\" stroke=\"#8884d8\" strokeWidth={2} />\n          <ReferenceLine y={averageTurni} stroke=\"red\" strokeDasharray=\"3 3\">\n            <Label value=\"Media Annuale\" position=\"insideTopLeft\" fill=\"red\" />\n          </ReferenceLine>\n        </LineChart>\n      </ResponsiveContainer>\n      <div style={{ textAlign: 'center', marginTop: '10px', fontSize: '14px', color: '#4B5563' }}>\n        Media Annuale: {averageTurni.toFixed(2)} turni\n      </div>\n    </div>\n  );\n};\n\nconst MonthlyListCard = ({ data }) => (\n  <div style={{\n    backgroundColor: 'white',\n    borderRadius: '12px',\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n    padding: '20px',\n    marginBottom: '20px',\n  }}\n  role=\"region\"\n  aria-label=\"Lista Mensile dei Turni di Doppiaggio\">\n    <div style={{ display: 'flex', alignItems: 'center', marginBottom: '16px' }}>\n      <List size={24} color='#4B5563' aria-hidden=\"true\" />\n      <span style={{ marginLeft: '12px', fontSize: '18px', fontWeight: '500', color: '#4B5563' }}>Lista Mensile dei Turni di Doppiaggio</span>\n    </div>\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\n      {Object.entries(data).map(([month, { totaleTurni }]) => (\n        <div key={month} style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '8px', borderBottom: '1px solid #E5E7EB', paddingBottom: '8px' }}>\n          <span style={{ color: '#4B5563' }}>{monthNames[parseInt(month)]}</span>\n          <span style={{ fontWeight: 'bold', color: '#1F2937' }}>{totaleTurni}</span>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nconst calculateComparison = (current, previous) => {\n  if (typeof current !== 'number' || typeof previous !== 'number' || previous === 0) {\n    return 'N/A';\n  }\n  const diff = current - previous;\n  const percentage = (diff / previous) * 100;\n  return percentage > 0 ? `+${percentage.toFixed(1)}%` : `${percentage.toFixed(1)}%`;\n};\n\nconst processYearlyData = (data) => {\n  if (!data || Object.keys(data).length === 0) return null;\n  \n  const months = Object.keys(data);\n  const totalTurni = months.reduce((sum, month) => sum + (data[month]?.totaleTurni || 0), 0);\n  \n  const [monthWithMostTurni, monthWithLeastTurni] = months.reduce(([max, min], month) => {\n    const turni = data[month]?.totaleTurni || 0;\n    return [\n      turni > (data[max]?.totaleTurni || 0) ? month : max,\n      (turni < (data[min]?.totaleTurni || 0) && turni > 0) ? month : min\n    ];\n  }, [months[0], months[0]]);\n\n  return {\n    totalTurni,\n    avgTurni: totalTurni / months.length,\n    monthWithMostTurni: {\n      month: parseInt(monthWithMostTurni) + 1,\n      value: data[monthWithMostTurni]?.totaleTurni || 0\n    },\n    monthWithLeastTurni: {\n      month: parseInt(monthWithLeastTurni) + 1,\n      value: data[monthWithLeastTurni]?.totaleTurni || 0\n    }\n  };\n};\n\nconst LastYearView = ({ setView, year = new Date().getFullYear() }) => {\n  const yearlyData = getYearlyData(year);\n  const lastYearData = processYearlyData(yearlyData);\n  const previousYearData = processYearlyData(getYearlyData(year - 1));\n\n  if (!lastYearData || !previousYearData) {\n    return (\n      <div style={{\n        backgroundColor: '#F0F9FF',\n        minHeight: '100vh',\n        padding: '24px',\n        fontFamily: \"'Helvetica Neue', Arial, sans-serif\",\n      }}>\n        <div style={{ maxWidth: '800px', margin: '0 auto', textAlign: 'center' }}>\n          <h1>Dati non disponibili</h1>\n          <p>Ci scusiamo, ma i dati per l'anno {year} non sono disponibili al momento.</p>\n          <button \n            onClick={() => setView('main')} \n            style={{\n              background: '#4B5563',\n              color: 'white',\n              border: 'none',\n              borderRadius: '8px',\n              padding: '10px 20px',\n              cursor: 'pointer',\n              fontSize: '16px',\n              marginTop: '20px',\n            }}\n          >\n            Torna alla Dashboard\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  const stats = [\n    { \n      icon: <Calendar />, \n      label: 'Totale Turni di Doppiaggio Annuali', \n      value: lastYearData.totalTurni,\n      comparison: calculateComparison(lastYearData.totalTurni, previousYearData.totalTurni),\n      backgroundColor: '#E6F3FF'\n    },\n    { \n      icon: <Activity />, \n      label: 'Media Turni di Doppiaggio Mensile', \n      value: lastYearData.avgTurni.toFixed(1),\n      comparison: calculateComparison(lastYearData.avgTurni, previousYearData.avgTurni),\n      backgroundColor: '#FFF0E6'\n    },\n    { \n      icon: <TrendingUp />, \n      label: 'Mese con PiÃ¹ Turni di Doppiaggio', \n      value: `${lastYearData.monthWithMostTurni.value} (${monthNames[lastYearData.monthWithMostTurni.month - 1]})`,\n      comparison: calculateComparison(lastYearData.monthWithMostTurni.value, previousYearData.monthWithMostTurni.value),\n      backgroundColor: '#FFF0F0'\n    },\n    { \n      icon: <TrendingDown />, \n      label: 'Mese con Meno Turni di Doppiaggio', \n      value: `${lastYearData.monthWithLeastTurni.value} (${monthNames[lastYearData.monthWithLeastTurni.month - 1]})`,\n      comparison: calculateComparison(lastYearData.monthWithLeastTurni.value, previousYearData.monthWithLeastTurni.value),\n      backgroundColor: '#F0F0FF'\n    },\n  ];\n\n  return (\n    <div style={{\n      backgroundColor: '#F0F9FF',\n      minHeight: '100vh',\n      padding: '24px',\n      fontFamily: \"'Helvetica Neue', Arial, sans-serif\",\n    }}>\n      <div style={{ maxWidth: '800px', margin: '0 auto' }}>\n        <button \n          onClick={() => setView('main')} \n          style={{\n            background: '#4B5563',\n            color: 'white',\n            border: 'none',\n            borderRadius: '8px',\n            padding: '10px 20px',\n            cursor: 'pointer',\n            display: 'flex',\n            alignItems: 'center',\n            fontSize: '16px',\n            marginBottom: '24px',\n            transition: 'background-color 0.3s',\n          }}\n          onMouseOver={(e) => e.currentTarget.style.backgroundColor = '#374151'}\n          onMouseOut={(e) => e.currentTarget.style.backgroundColor = '#4B5563'}\n        >\n          <ArrowLeft size={20} style={{ marginRight: '8px' }} />\n          Torna alla Dashboard\n        </button>\n        \n        <h1 style={{\n          fontSize: '32px',\n          fontWeight: 'bold',\n          textAlign: 'center',\n          marginBottom: '8px',\n          color: '#1F2937',\n        }}>\n          Statistiche Anno\n        </h1>\n        <h2 style={{\n          fontSize: '28px',\n          fontWeight: 'bold',\n          textAlign: 'center',\n          marginBottom: '32px',\n          color: '#4B5563',\n        }}>\n          {year}\n        </h2>\n        \n        <YearlyChart data={yearlyData} averageTurni={lastYearData.avgTurni} />\n        \n        <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between' }}>\n          {stats.map((stat, index) => (\n            <StatCard key={index} {...stat} />\n          ))}\n        </div>\n\n        <MonthlyListCard data={yearlyData} />\n      </div>\n    </div>\n  );\n};\n\nexport default LastYearView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}