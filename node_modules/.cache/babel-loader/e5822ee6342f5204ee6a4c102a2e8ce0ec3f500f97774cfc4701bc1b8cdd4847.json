{"ast":null,"code":"var _jsxFileName = \"/Users/marcoaugustocomba/Documents/GitHub/StudioStats/StudioStats/src/PerformanceGauge.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PerformanceGauge = ({\n  value,\n  maxValue = 30\n}) => {\n  const percentage = value / maxValue * 100;\n  const angle = percentage / 100 * 180 - 90; // -90 to 90 degrees\n\n  const getColor = percent => {\n    if (percent < 33) return '#ff4d4d';\n    if (percent < 66) return '#ffa500';\n    return '#4CAF50';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '200px',\n      height: '200px',\n      margin: '20px auto'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      viewBox: \"0 0 100 50\",\n      children: [/*#__PURE__*/_jsxDEV(\"path\", {\n        d: \"M5,50 A45,45 0 0,1 95,50\",\n        fill: \"none\",\n        stroke: \"#e0e0e0\",\n        strokeWidth: \"10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        d: `M5,50 A45,45 0 ${percentage > 50 ? 1 : 0},1 ${50 + 45 * Math.cos(angle * Math.PI / 180)},${50 - 45 * Math.sin(angle * Math.PI / 180)}`,\n        fill: \"none\",\n        stroke: getColor(percentage),\n        strokeWidth: \"10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: \"50\",\n        y1: \"50\",\n        x2: 50 + 40 * Math.cos(angle * Math.PI / 180),\n        y2: 50 - 40 * Math.sin(angle * Math.PI / 180),\n        stroke: \"#333\",\n        strokeWidth: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"50\",\n        cy: \"50\",\n        r: \"3\",\n        fill: \"#333\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"50\",\n        y: \"70\",\n        textAnchor: \"middle\",\n        fontSize: \"10\",\n        fill: \"#333\",\n        children: [percentage.toFixed(1), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"50\",\n        y: \"80\",\n        textAnchor: \"middle\",\n        fontSize: \"8\",\n        fill: \"#666\",\n        children: [value.toFixed(1), \" / \", maxValue, \" turni\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = PerformanceGauge;\nexport default PerformanceGauge;\nvar _c;\n$RefreshReg$(_c, \"PerformanceGauge\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PerformanceGauge","value","maxValue","percentage","angle","getColor","percent","style","width","height","margin","children","viewBox","d","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","Math","cos","PI","sin","x1","y1","x2","y2","cx","cy","r","x","y","textAnchor","fontSize","toFixed","_c","$RefreshReg$"],"sources":["/Users/marcoaugustocomba/Documents/GitHub/StudioStats/StudioStats/src/PerformanceGauge.js"],"sourcesContent":["import React from 'react';\n\nconst PerformanceGauge = ({ value, maxValue = 30 }) => {\n  const percentage = (value / maxValue) * 100;\n  const angle = (percentage / 100) * 180 - 90; // -90 to 90 degrees\n\n  const getColor = (percent) => {\n    if (percent < 33) return '#ff4d4d';\n    if (percent < 66) return '#ffa500';\n    return '#4CAF50';\n  };\n\n  return (\n    <div style={{ width: '200px', height: '200px', margin: '20px auto' }}>\n      <svg viewBox=\"0 0 100 50\">\n        {/* Semicircle background */}\n        <path\n          d=\"M5,50 A45,45 0 0,1 95,50\"\n          fill=\"none\"\n          stroke=\"#e0e0e0\"\n          strokeWidth=\"10\"\n        />\n        \n        {/* Colored arc based on percentage */}\n        <path\n          d={`M5,50 A45,45 0 ${percentage > 50 ? 1 : 0},1 ${50 + 45 * Math.cos(angle * Math.PI / 180)},${50 - 45 * Math.sin(angle * Math.PI / 180)}`}\n          fill=\"none\"\n          stroke={getColor(percentage)}\n          strokeWidth=\"10\"\n        />\n        \n        {/* Needle */}\n        <line\n          x1=\"50\"\n          y1=\"50\"\n          x2={50 + 40 * Math.cos(angle * Math.PI / 180)}\n          y2={50 - 40 * Math.sin(angle * Math.PI / 180)}\n          stroke=\"#333\"\n          strokeWidth=\"2\"\n        />\n        \n        {/* Center circle */}\n        <circle cx=\"50\" cy=\"50\" r=\"3\" fill=\"#333\" />\n        \n        {/* Percentage text */}\n        <text x=\"50\" y=\"70\" textAnchor=\"middle\" fontSize=\"10\" fill=\"#333\">\n          {percentage.toFixed(1)}%\n        </text>\n        \n        {/* Value text */}\n        <text x=\"50\" y=\"80\" textAnchor=\"middle\" fontSize=\"8\" fill=\"#666\">\n          {value.toFixed(1)} / {maxValue} turni\n        </text>\n      </svg>\n    </div>\n  );\n};\n\nexport default PerformanceGauge;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}