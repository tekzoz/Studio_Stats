{"ast":null,"code":"// Strutture dati per i mesi\nconst monthsData = [\n// Dati 2020\n{\n  year: 2020,\n  month: 1,\n  // Gennaio\n  days: {\n    1: 0,\n    2: 0,\n    3: 0,\n    4: 0,\n    5: 0,\n    6: 0,\n    7: 0,\n    8: 0,\n    9: 0,\n    10: 0,\n    11: 0,\n    12: 0,\n    13: 0,\n    14: 0,\n    15: 0,\n    16: 0,\n    17: 0,\n    18: 0,\n    19: 0,\n    20: 1,\n    21: 0,\n    22: 0,\n    23: 0,\n    24: 3,\n    25: 0,\n    26: 0,\n    27: 0,\n    28: 11,\n    29: 0,\n    30: 0,\n    31: 0\n  }\n}, {\n  year: 2020,\n  month: 2,\n  // Febbraio\n  days: {\n    1: 0,\n    2: 0,\n    3: 7,\n    4: 7,\n    5: 8,\n    6: 11,\n    7: 10,\n    8: 0,\n    9: 0,\n    10: 4,\n    11: 4,\n    12: 3,\n    13: 4,\n    14: 1,\n    15: 0,\n    16: 0,\n    17: 2,\n    18: 4,\n    19: 0,\n    20: 4,\n    21: 3,\n    22: 0,\n    23: 0,\n    24: 9,\n    25: 4,\n    26: 3,\n    27: 6,\n    28: 8,\n    29: 0\n  }\n}, {\n  year: 2020,\n  month: 3,\n  // Marzo\n  days: {\n    1: 0,\n    2: 8,\n    3: 10,\n    4: 8,\n    5: 7,\n    6: 7,\n    7: 0,\n    8: 0,\n    9: 5,\n    10: 3,\n    11: 0,\n    12: 1,\n    13: 0,\n    14: 0,\n    15: 0,\n    16: 0,\n    17: 0,\n    18: 0,\n    19: 0,\n    20: 0,\n    21: 0,\n    22: 0,\n    23: 0,\n    24: 0,\n    25: 0,\n    26: 0,\n    27: 0,\n    28: 0,\n    29: 0,\n    30: 0,\n    31: 0\n  }\n}, {\n  year: 2020,\n  month: 4,\n  // Aprile\n  days: {\n    1: 0,\n    2: 0,\n    3: 0,\n    4: 0,\n    5: 0,\n    6: 0,\n    7: 0,\n    8: 0,\n    9: 0,\n    10: 0,\n    11: 0,\n    12: 0,\n    13: 0,\n    14: 0,\n    15: 0,\n    16: 0,\n    17: 0,\n    18: 0,\n    19: 0,\n    20: 11,\n    21: 8,\n    22: 8,\n    23: 10,\n    24: 11,\n    25: 0,\n    26: 0,\n    27: 16,\n    28: 13,\n    29: 14,\n    30: 11\n  }\n}, {\n  year: 2020,\n  month: 5,\n  // Maggio\n  days: {\n    1: 0,\n    2: 0,\n    3: 0,\n    4: 18,\n    5: 16,\n    6: 16,\n    7: 16,\n    8: 14,\n    9: 0,\n    10: 0,\n    11: 19,\n    12: 22,\n    13: 14,\n    14: 13,\n    15: 16,\n    16: 0,\n    17: 0,\n    18: 17,\n    19: 21,\n    20: 13,\n    21: 21,\n    22: 20,\n    23: 2,\n    24: 0,\n    25: 15,\n    26: 13,\n    27: 9,\n    28: 9,\n    29: 3,\n    30: 0,\n    31: 0\n  }\n}, {\n  year: 2020,\n  month: 6,\n  // Giugno\n  days: {\n    1: 3,\n    2: 0,\n    3: 7,\n    4: 6,\n    5: 4,\n    6: 0,\n    7: 0,\n    8: 5,\n    9: 5,\n    10: 10,\n    11: 6,\n    12: 11,\n    13: 0,\n    14: 0,\n    15: 10,\n    16: 10,\n    17: 13,\n    18: 13,\n    19: 9,\n    20: 0,\n    21: 0,\n    22: 9,\n    23: 13,\n    24: 12,\n    25: 15,\n    26: 11,\n    27: 0,\n    28: 0,\n    29: 0,\n    30: 16\n  }\n}, {\n  year: 2020,\n  month: 7,\n  // Luglio\n  days: {\n    1: 15,\n    2: 14,\n    3: 8,\n    4: 0,\n    5: 0,\n    6: 15,\n    7: 17,\n    8: 15,\n    9: 17,\n    10: 14,\n    11: 0,\n    12: 0,\n    13: 16,\n    14: 11,\n    15: 8,\n    16: 12,\n    17: 7,\n    18: 0,\n    19: 0,\n    20: 8,\n    21: 13,\n    22: 8,\n    23: 12,\n    24: 6,\n    25: 0,\n    26: 0,\n    27: 15,\n    28: 10,\n    29: 9,\n    30: 13,\n    31: 8\n  }\n}, {\n  year: 2020,\n  month: 8,\n  // Agosto\n  days: {\n    1: 0,\n    2: 0,\n    3: 9,\n    4: 4,\n    5: 1,\n    6: 0,\n    7: 0,\n    8: 0,\n    9: 0,\n    10: 0,\n    11: 0,\n    12: 0,\n    13: 0,\n    14: 0,\n    15: 0,\n    16: 0,\n    17: 0,\n    18: 0,\n    19: 0,\n    20: 0,\n    21: 0,\n    22: 0,\n    23: 0,\n    24: 0,\n    25: 0,\n    26: 0,\n    27: 0,\n    28: 1,\n    29: 0,\n    30: 0,\n    31: 0\n  }\n}, {\n  year: 2020,\n  month: 9,\n  // Settembre\n  days: {\n    1: 0,\n    2: 0,\n    3: 0,\n    4: 2,\n    5: 0,\n    6: 0,\n    7: 8,\n    8: 9,\n    9: 6,\n    10: 9,\n    11: 13,\n    12: 0,\n    13: 0,\n    14: 9,\n    15: 8,\n    16: 7,\n    17: 9,\n    18: 4,\n    19: 0,\n    20: 0,\n    21: 8,\n    22: 8,\n    23: 10,\n    24: 11,\n    25: 13,\n    26: 0,\n    27: 0,\n    28: 12,\n    29: 13,\n    30: 13\n  }\n}, {\n  year: 2020,\n  month: 10,\n  // Ottobre\n  days: {\n    1: 15,\n    2: 11,\n    3: 2,\n    4: 0,\n    5: 12,\n    6: 19,\n    7: 20,\n    8: 20,\n    9: 10,\n    10: 0,\n    11: 0,\n    12: 13,\n    13: 11,\n    14: 11,\n    15: 11,\n    16: 10,\n    17: 0,\n    18: 0,\n    19: 10,\n    20: 9,\n    21: 10,\n    22: 12,\n    23: 8,\n    24: 0,\n    25: 0,\n    26: 6,\n    27: 9,\n    28: 9,\n    29: 11,\n    30: 8,\n    31: 0\n  }\n}, {\n  year: 2020,\n  month: 11,\n  // Novembre\n  days: {\n    1: 0,\n    2: 6,\n    3: 6,\n    4: 5,\n    5: 5,\n    6: 6,\n    7: 0,\n    8: 0,\n    9: 6,\n    10: 5,\n    11: 6,\n    12: 7,\n    13: 2,\n    14: 0,\n    15: 0,\n    16: 4,\n    17: 7,\n    18: 6,\n    19: 6,\n    20: 6,\n    21: 0,\n    22: 0,\n    23: 11,\n    24: 9,\n    25: 12,\n    26: 12,\n    27: 9,\n    28: 0,\n    29: 0,\n    30: 6\n  }\n}, {\n  year: 2020,\n  month: 12,\n  // Dicembre\n  days: {\n    1: 7,\n    2: 9,\n    3: 7,\n    4: 6,\n    5: 0,\n    6: 0,\n    7: 1,\n    8: 0,\n    9: 6,\n    10: 11,\n    11: 11,\n    12: 0,\n    13: 0,\n    14: 7,\n    15: 4,\n    16: 13,\n    17: 15,\n    18: 9,\n    19: 0,\n    20: 0,\n    21: 11,\n    22: 16,\n    23: 13,\n    24: 0,\n    25: 0,\n    26: 0,\n    27: 0,\n    28: 12,\n    29: 11,\n    30: 14,\n    31: 0\n  }\n},\n// Dati 2021\n{\n  year: 2021,\n  month: 1,\n  // Gennaio\n  days: {\n    1: 0,\n    2: 0,\n    3: 0,\n    4: 10,\n    5: 7,\n    6: 0,\n    7: 9,\n    8: 11,\n    9: 0,\n    10: 0,\n    11: 13,\n    12: 11,\n    13: 10,\n    14: 13,\n    15: 9,\n    16: 0,\n    17: 0,\n    18: 16,\n    19: 10,\n    20: 15,\n    21: 10,\n    22: 8,\n    23: 0,\n    24: 0,\n    25: 10,\n    26: 8,\n    27: 6,\n    28: 6,\n    29: 5,\n    30: 0,\n    31: 0\n  }\n}, {\n  year: 2021,\n  month: 2,\n  // Febbraio\n  days: {\n    1: 8,\n    2: 10,\n    3: 6,\n    4: 10,\n    5: 8,\n    6: 0,\n    7: 0,\n    8: 6,\n    9: 10,\n    10: 10,\n    11: 7,\n    12: 7,\n    13: 2,\n    14: 0,\n    15: 6,\n    16: 6,\n    17: 7,\n    18: 14,\n    19: 10,\n    20: 0,\n    21: 0,\n    22: 14,\n    23: 15,\n    24: 12,\n    25: 13,\n    26: 4,\n    27: 0,\n    28: 0\n  }\n}, {\n  year: 2021,\n  month: 3,\n  // Marzo\n  days: {\n    1: 11,\n    2: 14,\n    3: 17,\n    4: 19,\n    5: 12,\n    6: 0,\n    7: 0,\n    8: 17,\n    9: 17,\n    10: 16,\n    11: 17,\n    12: 19,\n    13: 3,\n    14: 0,\n    15: 16,\n    16: 15,\n    17: 15,\n    18: 9,\n    19: 14,\n    20: 0,\n    21: 0,\n    22: 12,\n    23: 10,\n    24: 15,\n    25: 17,\n    26: 8,\n    27: 0,\n    28: 0,\n    29: 7,\n    30: 13,\n    31: 15\n  }\n}, {\n  year: 2021,\n  month: 4,\n  // Aprile\n  days: {\n    1: 13,\n    2: 0,\n    3: 0,\n    4: 0,\n    5: 0,\n    6: 11,\n    7: 20,\n    8: 17,\n    9: 14,\n    10: 0,\n    11: 0,\n    12: 16,\n    13: 17,\n    14: 19,\n    15: 16,\n    16: 10,\n    17: 0,\n    18: 0,\n    19: 22,\n    20: 16,\n    21: 17,\n    22: 15,\n    23: 8,\n    24: 0,\n    25: 0,\n    26: 16,\n    27: 20,\n    28: 14,\n    29: 17,\n    30: 12\n  }\n}, {\n  year: 2021,\n  month: 5,\n  // Maggio\n  days: {\n    1: 2,\n    2: 0,\n    3: 16,\n    4: 16,\n    5: 14,\n    6: 21,\n    7: 11,\n    8: 0,\n    9: 0,\n    10: 10,\n    11: 9,\n    12: 14,\n    13: 5,\n    14: 12,\n    15: 0,\n    16: 0,\n    17: 13,\n    18: 20,\n    19: 20,\n    20: 24,\n    21: 15,\n    22: 0,\n    23: 0,\n    24: 18,\n    25: 20,\n    26: 17,\n    27: 17,\n    28: 16,\n    29: 0,\n    30: 0,\n    31: 13\n  }\n}, {\n  year: 2021,\n  month: 6,\n  // Giugno\n  days: {\n    1: 17,\n    2: 2,\n    3: 20,\n    4: 15,\n    5: 8,\n    6: 0,\n    7: 15,\n    8: 19,\n    9: 17,\n    10: 16,\n    11: 19,\n    12: 0,\n    13: 0,\n    14: 20,\n    15: 20,\n    16: 19,\n    17: 20,\n    18: 16,\n    19: 0,\n    20: 0,\n    21: 18,\n    22: 19,\n    23: 17,\n    24: 14,\n    25: 16,\n    26: 0,\n    27: 0,\n    28: 17,\n    29: 3,\n    30: 24\n  }\n}, {\n  year: 2021,\n  month: 7,\n  // Luglio\n  days: {\n    1: 22,\n    2: 22,\n    3: 2,\n    4: 0,\n    5: 23,\n    6: 22,\n    7: 27,\n    8: 23,\n    9: 19,\n    10: 5,\n    11: 0,\n    12: 18,\n    13: 14,\n    14: 9,\n    15: 15,\n    16: 15,\n    17: 0,\n    18: 0,\n    19: 16,\n    20: 11,\n    21: 12,\n    22: 15,\n    23: 11,\n    24: 0,\n    25: 0,\n    26: 17,\n    27: 19,\n    28: 11,\n    29: 15,\n    30: 20,\n    31: 0\n  }\n}, {\n  year: 2021,\n  month: 8,\n  // Agosto\n  days: {\n    1: 0,\n    2: 20,\n    3: 18,\n    4: 15,\n    5: 12,\n    6: 5,\n    7: 0,\n    8: 0,\n    9: 1,\n    10: 0,\n    11: 1,\n    12: 0,\n    13: 1,\n    14: 0,\n    15: 0,\n    16: 0,\n    17: 0,\n    18: 0,\n    19: 0,\n    20: 0,\n    21: 0,\n    22: 0,\n    23: 0,\n    24: 0,\n    25: 0,\n    26: 2,\n    27: 1,\n    28: 0,\n    29: 0,\n    30: 8,\n    31: 7\n  }\n}, {\n  year: 2021,\n  month: 9,\n  // Settembre\n  days: {\n    1: 10,\n    2: 14,\n    3: 9,\n    4: 0,\n    5: 0,\n    6: 20,\n    7: 20,\n    8: 17,\n    9: 19,\n    10: 18,\n    11: 0,\n    12: 0,\n    13: 19,\n    14: 16,\n    15: 16,\n    16: 19,\n    17: 16,\n    18: 0,\n    19: 0,\n    20: 17,\n    21: 21,\n    22: 18,\n    23: 21,\n    24: 14,\n    25: 0,\n    26: 0,\n    27: 20,\n    28: 22,\n    29: 19,\n    30: 20\n  }\n}, {\n  year: 2021,\n  month: 10,\n  // Ottobre\n  days: {\n    1: 19,\n    2: 1,\n    3: 0,\n    4: 20,\n    5: 17,\n    6: 15,\n    7: 18,\n    8: 16,\n    9: 0,\n    10: 0,\n    11: 19,\n    12: 18,\n    13: 18,\n    14: 16,\n    15: 17,\n    16: 1,\n    17: 0,\n    18: 20,\n    19: 21,\n    20: 21,\n    21: 21,\n    22: 19,\n    23: 1,\n    24: 0,\n    25: 19,\n    26: 19,\n    27: 19,\n    28: 17,\n    29: 17,\n    30: 0,\n    31: 0\n  }\n}, {\n  year: 2021,\n  month: 11,\n  // Novembre\n  days: {\n    1: 0,\n    2: 21,\n    3: 19,\n    4: 20,\n    5: 14,\n    6: 0,\n    7: 0,\n    8: 19,\n    9: 20,\n    10: 22,\n    11: 26,\n    12: 20,\n    13: 2,\n    14: 0,\n    15: 20,\n    16: 23,\n    17: 20,\n    18: 21,\n    19: 15,\n    20: 0,\n    21: 0,\n    22: 20,\n    23: 20,\n    24: 20,\n    25: 19,\n    26: 14,\n    27: 0,\n    28: 0,\n    29: 23,\n    30: 20\n  }\n}, {\n  year: 2021,\n  month: 12,\n  // Dicembre\n  days: {\n    1: 23,\n    2: 23,\n    3: 23,\n    4: 7,\n    5: 0,\n    6: 24,\n    7: 21,\n    8: 0,\n    9: 22,\n    10: 23,\n    11: 2,\n    12: 0,\n    13: 21,\n    14: 18,\n    15: 17,\n    16: 17,\n    17: 13,\n    18: 0,\n    19: 0,\n    20: 15,\n    21: 11,\n    22: 16,\n    23: 7,\n    24: 0,\n    25: 0,\n    26: 0,\n    27: 11,\n    28: 18,\n    29: 11,\n    30: 6,\n    31: 0\n  }\n},\n// Dati 2022\n{\n  year: 2022,\n  month: 1,\n  // Gennaio\n  days: {\n    1: 0,\n    2: 0,\n    3: 10,\n    4: 15,\n    5: 12,\n    6: 0,\n    7: 4,\n    8: 0,\n    9: 0,\n    10: 21,\n    11: 16,\n    12: 21,\n    13: 18,\n    14: 17,\n    15: 2,\n    16: 0,\n    17: 19,\n    18: 16,\n    19: 21,\n    20: 20,\n    21: 19,\n    22: 0,\n    23: 0,\n    24: 11,\n    25: 19,\n    26: 17,\n    27: 14,\n    28: 17,\n    29: 0,\n    30: 0,\n    31: 20\n  }\n}, {\n  year: 2022,\n  month: 2,\n  // Febbraio\n  days: {\n    1: 16,\n    2: 20,\n    3: 17,\n    4: 17,\n    5: 0,\n    6: 0,\n    7: 13,\n    8: 20,\n    9: 15,\n    10: 15,\n    11: 14,\n    12: 0,\n    13: 0,\n    14: 19,\n    15: 21,\n    16: 20,\n    17: 17,\n    18: 19,\n    19: 0,\n    20: 0,\n    21: 22,\n    22: 19,\n    23: 20,\n    24: 18,\n    25: 13,\n    26: 0,\n    27: 0,\n    28: 17\n  }\n}, {\n  year: 2022,\n  month: 3,\n  // Marzo\n  days: {\n    1: 14,\n    2: 20,\n    3: 21,\n    4: 20,\n    5: 0,\n    6: 0,\n    7: 16,\n    8: 18,\n    9: 17,\n    10: 20,\n    11: 19,\n    12: 0,\n    13: 0,\n    14: 21,\n    15: 20,\n    16: 17,\n    17: 19,\n    18: 13,\n    19: 0,\n    20: 0,\n    21: 14,\n    22: 11,\n    23: 16,\n    24: 18,\n    25: 14,\n    26: 0,\n    27: 0,\n    28: 18,\n    29: 18,\n    30: 18,\n    31: 19\n  }\n}, {\n  year: 2022,\n  month: 4,\n  // Aprile\n  days: {\n    1: 16,\n    2: 0,\n    3: 0,\n    4: 16,\n    5: 17,\n    6: 19,\n    7: 19,\n    8: 12,\n    9: 0,\n    10: 0,\n    11: 15,\n    12: 19,\n    13: 21,\n    14: 20,\n    15: 11,\n    16: 0,\n    17: 0,\n    18: 0,\n    19: 20,\n    20: 19,\n    21: 17,\n    22: 15,\n    23: 1,\n    24: 0,\n    25: 0,\n    26: 17,\n    27: 16,\n    28: 15,\n    29: 18,\n    30: 0\n  }\n}, {\n  year: 2022,\n  month: 5,\n  // Maggio\n  days: {\n    1: 0,\n    2: 20,\n    3: 18,\n    4: 21,\n    5: 16,\n    6: 14,\n    7: 0,\n    8: 0,\n    9: 15,\n    10: 16,\n    11: 17,\n    12: 18,\n    13: 18,\n    14: 3,\n    15: 0,\n    16: 21,\n    17: 19,\n    18: 19,\n    19: 21,\n    20: 16,\n    21: 0,\n    22: 0,\n    23: 18,\n    24: 21,\n    25: 21,\n    26: 19,\n    27: 18,\n    28: 3,\n    29: 0,\n    30: 18,\n    31: 16\n  }\n}, {\n  year: 2022,\n  month: 6,\n  // Giugno\n  days: {\n    1: 17,\n    2: 0,\n    3: 13,\n    4: 0,\n    5: 0,\n    6: 18,\n    7: 21,\n    8: 21,\n    9: 22,\n    10: 19,\n    11: 3,\n    12: 0,\n    13: 19,\n    14: 17,\n    15: 22,\n    16: 18,\n    17: 18,\n    18: 0,\n    19: 0,\n    20: 18,\n    21: 18,\n    22: 19,\n    23: 20,\n    24: 15,\n    25: 2,\n    26: 0,\n    27: 21,\n    28: 18,\n    29: 0,\n    30: 23\n  }\n}, {\n  year: 2022,\n  month: 7,\n  // Luglio\n  days: {\n    1: 16,\n    2: 0,\n    3: 0,\n    4: 15,\n    5: 15,\n    6: 18,\n    7: 18,\n    8: 19,\n    9: 0,\n    10: 0,\n    11: 13,\n    12: 17,\n    13: 19,\n    14: 18,\n    15: 21,\n    16: 3,\n    17: 0,\n    18: 21,\n    19: 23,\n    20: 19,\n    21: 23,\n    22: 19,\n    23: 0,\n    24: 0,\n    25: 22,\n    26: 19,\n    27: 20,\n    28: 21,\n    29: 23,\n    30: 0,\n    31: 0\n  }\n}, {\n  year: 2022,\n  month: 8,\n  // Agosto\n  days: {\n    1: 21,\n    2: 17,\n    3: 20,\n    4: 12,\n    5: 9,\n    6: 0,\n    7: 0,\n    8: 11,\n    9: 3,\n    10: 0,\n    11: 0,\n    12: 1,\n    13: 0,\n    14: 0,\n    15: 0,\n    16: 0,\n    17: 0,\n    18: 0,\n    19: 0,\n    20: 0,\n    21: 0,\n    22: 0,\n    23: 1,\n    24: 4,\n    25: 5,\n    26: 7,\n    27: 0,\n    28: 0,\n    29: 17,\n    30: 16,\n    31: 17\n  }\n}, {\n  year: 2022,\n  month: 9,\n  // Settembre\n  days: {\n    1: 20,\n    2: 21,\n    3: 3,\n    4: 0,\n    5: 24,\n    6: 22,\n    7: 23,\n    8: 21,\n    9: 23,\n    10: 3,\n    11: 0,\n    12: 23,\n    13: 20,\n    14: 21,\n    15: 22,\n    16: 14,\n    17: 0,\n    18: 0,\n    19: 21,\n    20: 19,\n    21: 21,\n    22: 22,\n    23: 14,\n    24: 0,\n    25: 0,\n    26: 19,\n    27: 22,\n    28: 14,\n    29: 16,\n    30: 14\n  }\n}, {\n  year: 2022,\n  month: 10,\n  // Ottobre\n  days: {\n    1: 0,\n    2: 0,\n    3: 9,\n    4: 12,\n    5: 14,\n    6: 10,\n    7: 15,\n    8: 0,\n    9: 0,\n    10: 19,\n    11: 17,\n    12: 16,\n    13: 19,\n    14: 20,\n    15: 1,\n    16: 0,\n    17: 19,\n    18: 15,\n    19: 19,\n    20: 22,\n    21: 15,\n    22: 0,\n    23: 0,\n    24: 20,\n    25: 14,\n    26: 19,\n    27: 19,\n    28: 16,\n    29: 0,\n    30: 0,\n    31: 7\n  }\n}, {\n  year: 2022,\n  month: 11,\n  // Novembre\n  days: {\n    1: 0,\n    2: 19,\n    3: 19,\n    4: 19,\n    5: 0,\n    6: 0,\n    7: 19,\n    8: 21,\n    9: 18,\n    10: 21,\n    11: 16,\n    12: 2,\n    13: 0,\n    14: 17,\n    15: 14,\n    16: 18,\n    17: 18,\n    18: 18,\n    19: 0,\n    20: 0,\n    21: 19,\n    22: 19,\n    23: 16,\n    24: 19,\n    25: 17,\n    26: 0,\n    27: 0,\n    28: 18,\n    29: 16,\n    30: 15\n  }\n}, {\n  year: 2022,\n  month: 12,\n  // Dicembre\n  days: {\n    1: 16,\n    2: 14,\n    3: 0,\n    4: 0,\n    5: 12,\n    6: 17,\n    7: 18,\n    8: 0,\n    9: 5,\n    10: 0,\n    11: 0,\n    12: 14,\n    13: 15,\n    14: 17,\n    15: 22,\n    16: 10,\n    17: 0,\n    18: 0,\n    19: 19,\n    20: 15,\n    21: 16,\n    22: 15,\n    23: 5,\n    24: 0,\n    25: 0,\n    26: 0,\n    27: 8,\n    28: 4,\n    29: 4,\n    30: 2,\n    31: 0\n  }\n},\n// Dati 2023\n{\n  year: 2023,\n  month: 1,\n  // Gennaio\n  days: {\n    1: 0,\n    2: 1,\n    3: 2,\n    4: 4,\n    5: 0,\n    6: 0,\n    7: 0,\n    8: 0,\n    9: 19,\n    10: 16,\n    11: 15,\n    12: 9,\n    13: 8,\n    14: 0,\n    15: 0,\n    16: 12,\n    17: 12,\n    18: 10,\n    19: 9,\n    20: 8,\n    21: 0,\n    22: 0,\n    23: 12,\n    24: 12,\n    25: 16,\n    26: 19,\n    27: 16,\n    28: 0,\n    29: 0,\n    30: 17,\n    31: 16\n  }\n}, {\n  year: 2023,\n  month: 2,\n  // Febbraio\n  days: {\n    1: 16,\n    2: 15,\n    3: 13,\n    4: 0,\n    5: 0,\n    6: 16,\n    7: 19,\n    8: 17,\n    9: 12,\n    10: 17,\n    11: 0,\n    12: 0,\n    13: 13,\n    14: 14,\n    15: 15,\n    16: 14,\n    17: 12,\n    18: 0,\n    19: 0,\n    20: 14,\n    21: 11,\n    22: 2,\n    23: 2,\n    24: 3,\n    25: 0,\n    26: 0,\n    27: 2,\n    28: 0\n  }\n}, {\n  year: 2023,\n  month: 3,\n  // Marzo\n  days: {\n    1: 0,\n    2: 0,\n    3: 0,\n    4: 0,\n    5: 0,\n    6: 0,\n    7: 0,\n    8: 0,\n    9: 0,\n    10: 1,\n    11: 0,\n    12: 0,\n    13: 0,\n    14: 0,\n    15: 17,\n    16: 15,\n    17: 12,\n    18: 0,\n    19: 0,\n    20: 17,\n    21: 16,\n    22: 21,\n    23: 21,\n    24: 20,\n    25: 0,\n    26: 0,\n    27: 21,\n    28: 17,\n    29: 15,\n    30: 13,\n    31: 14\n  }\n}, {\n  year: 2023,\n  month: 4,\n  // Aprile\n  days: {\n    1: 0,\n    2: 0,\n    3: 16,\n    4: 13,\n    5: 14,\n    6: 12,\n    7: 5,\n    8: 0,\n    9: 0,\n    10: 0,\n    11: 17,\n    12: 14,\n    13: 15,\n    14: 15,\n    15: 0,\n    16: 0,\n    17: 12,\n    18: 15,\n    19: 18,\n    20: 21,\n    21: 16,\n    22: 0,\n    23: 0,\n    24: 9,\n    25: 0,\n    26: 19,\n    27: 20,\n    28: 15,\n    29: 0,\n    30: 0\n  }\n}, {\n  year: 2023,\n  month: 5,\n  // Maggio\n  days: {\n    1: 0,\n    2: 18,\n    3: 21,\n    4: 18,\n    5: 20,\n    6: 0,\n    7: 0,\n    8: 19,\n    9: 19,\n    10: 19,\n    11: 19,\n    12: 18,\n    13: 0,\n    14: 0,\n    15: 19,\n    16: 19,\n    17: 19,\n    18: 17,\n    19: 10,\n    20: 0,\n    21: 0,\n    22: 20,\n    23: 19,\n    24: 20,\n    25: 21,\n    26: 19,\n    27: 0,\n    28: 0,\n    29: 21,\n    30: 21,\n    31: 20\n  }\n}, {\n  year: 2023,\n  month: 6,\n  // Giugno\n  days: {\n    1: 19,\n    2: 0,\n    3: 0,\n    4: 0,\n    5: 22,\n    6: 21,\n    7: 19,\n    8: 16,\n    9: 19,\n    10: 0,\n    11: 0,\n    12: 19,\n    13: 20,\n    14: 21,\n    15: 22,\n    16: 12,\n    17: 0,\n    18: 0,\n    19: 19,\n    20: 16,\n    21: 15,\n    22: 18,\n    23: 16,\n    24: 0,\n    25: 0,\n    26: 19,\n    27: 19,\n    28: 21,\n    29: 0,\n    30: 7\n  }\n}, {\n  year: 2023,\n  month: 7,\n  // Luglio\n  days: {\n    1: 0,\n    2: 0,\n    3: 21,\n    4: 18,\n    5: 23,\n    6: 23,\n    7: 18,\n    8: 0,\n    9: 0,\n    10: 17,\n    11: 19,\n    12: 18,\n    13: 17,\n    14: 9,\n    15: 0,\n    16: 0,\n    17: 16,\n    18: 16,\n    19: 13,\n    20: 14,\n    21: 9,\n    22: 0,\n    23: 0,\n    24: 13,\n    25: 13,\n    26: 18,\n    27: 15,\n    28: 7,\n    29: 0,\n    30: 0,\n    31: 12\n  }\n}, {\n  year: 2023,\n  month: 8,\n  // Agosto\n  days: {\n    1: 15,\n    2: 7,\n    3: 8,\n    4: 3,\n    5: 0,\n    6: 0,\n    7: 3,\n    8: 1,\n    9: 0,\n    10: 1,\n    11: 0,\n    12: 0,\n    13: 0,\n    14: 0,\n    15: 0,\n    16: 0,\n    17: 0,\n    18: 0,\n    19: 0,\n    20: 0,\n    21: 0,\n    22: 0,\n    23: 0,\n    24: 0,\n    25: 0,\n    26: 0,\n    27: 0,\n    28: 6,\n    29: 8,\n    30: 7,\n    31: 7\n  }\n}, {\n  year: 2023,\n  month: 9,\n  // Settembre\n  days: {\n    1: 7,\n    2: 0,\n    3: 0,\n    4: 9,\n    5: 11,\n    6: 20,\n    7: 20,\n    8: 11,\n    9: 0,\n    10: 0,\n    11: 17,\n    12: 17,\n    13: 18,\n    14: 15,\n    15: 12,\n    16: 0,\n    17: 0,\n    18: 10,\n    19: 13,\n    20: 19,\n    21: 11,\n    22: 6,\n    23: 0,\n    24: 0,\n    25: 11,\n    26: 12,\n    27: 15,\n    28: 10,\n    29: 8,\n    30: 0\n  }\n}, {\n  year: 2023,\n  month: 10,\n  // Ottobre\n  days: {\n    1: 0,\n    2: 23,\n    3: 19,\n    4: 22,\n    5: 14,\n    6: 11,\n    7: 0,\n    8: 0,\n    9: 13,\n    10: 22,\n    11: 18,\n    12: 16,\n    13: 12,\n    14: 0,\n    15: 0,\n    16: 19,\n    17: 18,\n    18: 21,\n    19: 14,\n    20: 10,\n    21: 0,\n    22: 0,\n    23: 14,\n    24: 15,\n    25: 18,\n    26: 18,\n    27: 7,\n    28: 0,\n    29: 0,\n    30: 16,\n    31: 13\n  }\n}, {\n  year: 2023,\n  month: 11,\n  // Novembre\n  days: {\n    1: 0,\n    2: 11,\n    3: 5,\n    4: 0,\n    5: 0,\n    6: 6,\n    7: 10,\n    8: 12,\n    9: 16,\n    10: 14,\n    11: 0,\n    12: 0,\n    13: 18,\n    14: 10,\n    15: 9,\n    16: 7,\n    17: 6,\n    18: 0,\n    19: 0,\n    20: 13,\n    21: 12,\n    22: 11,\n    23: 13,\n    24: 14,\n    25: 0,\n    26: 0,\n    27: 8,\n    28: 9,\n    29: 13,\n    30: 12\n  }\n}, {\n  year: 2023,\n  month: 12,\n  // Dicembre\n  days: {\n    1: 9,\n    2: 0,\n    3: 0,\n    4: 9,\n    5: 12,\n    6: 19,\n    7: 15,\n    8: 0,\n    9: 0,\n    10: 0,\n    11: 11,\n    12: 7,\n    13: 19,\n    14: 14,\n    15: 11,\n    16: 0,\n    17: 0,\n    18: 20,\n    19: 23,\n    20: 16,\n    21: 12,\n    22: 8,\n    23: 0,\n    24: 0,\n    25: 0,\n    26: 0,\n    27: 1,\n    28: 1,\n    29: 0,\n    30: 0,\n    31: 0\n  }\n}, {\n  year: 2024,\n  month: 1,\n  // Gennaio\n  days: {\n    1: 0,\n    2: 0,\n    3: 3,\n    4: 1,\n    5: 3,\n    6: 0,\n    7: 0,\n    8: 10,\n    9: 6,\n    10: 10,\n    11: 8,\n    12: 9,\n    13: 0,\n    14: 0,\n    15: 10,\n    16: 12,\n    17: 10,\n    18: 9,\n    19: 9,\n    20: 0,\n    21: 0,\n    22: 11,\n    23: 12,\n    24: 10,\n    25: 11,\n    26: 9,\n    27: 0,\n    28: 0,\n    29: 8,\n    30: 9,\n    31: 9\n  }\n}, {\n  year: 2024,\n  month: 2,\n  // Febbraio\n  days: {\n    1: 9,\n    2: 6,\n    3: 0,\n    4: 0,\n    5: 9,\n    6: 11,\n    7: 11,\n    8: 11,\n    9: 11,\n    10: 0,\n    11: 0,\n    12: 11,\n    13: 11,\n    14: 12,\n    15: 16,\n    16: 10,\n    17: 0,\n    18: 0,\n    19: 11,\n    20: 14,\n    21: 8,\n    22: 11,\n    23: 11,\n    24: 0,\n    25: 0,\n    26: 3,\n    27: 17,\n    28: 12,\n    29: 17\n  }\n}, {\n  year: 2024,\n  month: 3,\n  // Marzo\n  days: {\n    1: 13,\n    2: 3,\n    3: 0,\n    4: 8,\n    5: 8,\n    6: 10,\n    7: 8,\n    8: 8,\n    9: 0,\n    10: 0,\n    11: 7,\n    12: 6,\n    13: 8,\n    14: 8,\n    15: 4,\n    16: 0,\n    17: 0,\n    18: 4,\n    19: 7,\n    20: 12,\n    21: 14,\n    22: 10,\n    23: 3,\n    24: 0,\n    25: 11,\n    26: 13,\n    27: 7,\n    28: 8,\n    29: 4,\n    30: 0,\n    31: 0\n  }\n}, {\n  year: 2024,\n  month: 4,\n  // Aprile\n  days: {\n    1: 0,\n    2: 9,\n    3: 10,\n    4: 18,\n    5: 19,\n    6: 3,\n    7: 0,\n    8: 21,\n    9: 25,\n    10: 23,\n    11: 25,\n    12: 19,\n    13: 3,\n    14: 0,\n    15: 22,\n    16: 22,\n    17: 23,\n    18: 26,\n    19: 19,\n    20: 2,\n    21: 0,\n    22: 17,\n    23: 23,\n    24: 20,\n    25: 0,\n    26: 12,\n    27: 3,\n    28: 0,\n    29: 13,\n    30: 15\n  }\n}, {\n  year: 2024,\n  month: 5,\n  // Maggio\n  days: {\n    1: 0,\n    2: 16,\n    3: 13,\n    4: 2,\n    5: 0,\n    6: 15,\n    7: 16,\n    8: 23,\n    9: 18,\n    10: 20,\n    11: 2,\n    12: 0,\n    13: 16,\n    14: 20,\n    15: 19,\n    16: 21,\n    17: 18,\n    18: 3,\n    19: 0,\n    20: 18,\n    21: 17,\n    22: 18,\n    23: 19,\n    24: 20,\n    25: 2,\n    26: 0,\n    27: 14,\n    28: 23,\n    29: 20,\n    30: 22,\n    31: 23\n  }\n}, {\n  year: 2024,\n  month: 6,\n  // Giugno\n  days: {\n    1: 2,\n    2: 0,\n    3: 24,\n    4: 25,\n    5: 19,\n    6: 27,\n    7: 23,\n    8: 2,\n    9: 0,\n    10: 18,\n    11: 17,\n    12: 18,\n    13: 18,\n    14: 19,\n    15: 3,\n    16: 0,\n    17: 15,\n    18: 18,\n    19: 17,\n    20: 16,\n    21: 20,\n    22: 2,\n    23: 0,\n    24: 22,\n    25: 20,\n    26: 21,\n    27: 19,\n    28: 18,\n    29: 0,\n    30: 0\n  }\n}, {\n  year: 2024,\n  month: 7,\n  // Luglio\n  days: {\n    1: 19,\n    2: 16,\n    3: 26,\n    4: 15,\n    5: 7,\n    6: 0,\n    7: 0,\n    8: 20,\n    9: 22,\n    10: 25,\n    11: 16,\n    12: 21,\n    13: 0,\n    14: 0,\n    15: 14,\n    16: 18,\n    17: 18,\n    18: 22,\n    19: 12,\n    20: 0,\n    21: 0,\n    22: 18,\n    23: 13,\n    24: 17,\n    25: 23,\n    26: 21,\n    27: 0,\n    28: 0,\n    29: 29,\n    30: 28,\n    31: 22\n  }\n}, {\n  year: 2024,\n  month: 8,\n  // Agosto\n  days: {\n    1: 19,\n    2: 11,\n    3: 0,\n    4: 0,\n    5: 10,\n    6: 5,\n    7: 5,\n    8: 6,\n    9: 2,\n    10: 0,\n    11: 0,\n    12: 0,\n    13: 0,\n    14: 0,\n    15: 0,\n    16: 0,\n    17: 0,\n    18: 0,\n    19: 2,\n    20: 0,\n    21: 0,\n    22: 0,\n    23: 0,\n    24: 0,\n    25: 0,\n    26: 7,\n    27: 7,\n    28: 8,\n    29: 12,\n    30: 8,\n    31: 0\n  }\n}];\n\n// Funzioni di utilità\n\nconst calculateTotalShifts = data => {\n  return Object.values(data.days).reduce((total, shifts) => total + shifts, 0);\n};\nconst getWorkdaysInMonth = (year, month) => {\n  const date = new Date(year, month - 1, 1);\n  let workdays = 0;\n  while (date.getMonth() === month - 1) {\n    const dayOfWeek = date.getDay();\n    if (dayOfWeek !== 0 && dayOfWeek !== 6) workdays++;\n    date.setDate(date.getDate() + 1);\n  }\n  return workdays;\n};\nconst calculateAverageWorkdayShifts = data => {\n  const total = calculateTotalShifts(data);\n  const workdays = getWorkdaysInMonth(data.year, data.month);\n  return total / workdays;\n};\nconst getMonthName = monthNumber => {\n  const monthNames = ['Gennaio', 'Febbraio', 'Marzo', 'Aprile', 'Maggio', 'Giugno', 'Luglio', 'Agosto', 'Settembre', 'Ottobre', 'Novembre', 'Dicembre'];\n  return monthNames[monthNumber - 1];\n};\nconst findMaxShiftsDay = data => {\n  return Object.entries(data.days).reduce((max, [day, shifts]) => {\n    return shifts > max.shifts ? {\n      day: parseInt(day),\n      shifts\n    } : max;\n  }, {\n    day: 0,\n    shifts: 0\n  });\n};\nconst findMinShiftsDay = data => {\n  return Object.entries(data.days).reduce((min, [day, shifts]) => {\n    if (shifts === 0) return min;\n    return shifts < min.shifts || min.shifts === 0 ? {\n      day: parseInt(day),\n      shifts\n    } : min;\n  }, {\n    day: 0,\n    shifts: 0\n  });\n};\n\n// Funzioni principali\n\nexport const getMonthData = yearMonth => {\n  const [year, month] = yearMonth.split('-').map(Number);\n  const monthData = monthsData.find(m => m.year === year && m.month === month);\n  if (monthData) {\n    return {\n      totaleTurni: calculateTotalShifts(monthData),\n      mediaGiornaliera: calculateAverageWorkdayShifts(monthData),\n      massimoTurni: findMaxShiftsDay(monthData),\n      minimoTurni: findMinShiftsDay(monthData)\n    };\n  }\n  return null;\n};\nexport const getAvailableMonths = () => {\n  return monthsData.map(m => ({\n    value: `${m.year}-${m.month.toString().padStart(2, '0')}`,\n    label: `${getMonthName(m.month)} ${m.year}`,\n    sortValue: m.year * 12 + m.month\n  })).sort((a, b) => b.sortValue - a.sortValue).map(({\n    value,\n    label\n  }) => ({\n    value,\n    label\n  }));\n};\nexport const getLatestMonthData = () => {\n  const lastMonth = monthsData[monthsData.length - 1];\n  return {\n    totaleTurni: calculateTotalShifts(lastMonth),\n    mediaGiornaliera: calculateAverageWorkdayShifts(lastMonth),\n    massimoTurni: findMaxShiftsDay(lastMonth),\n    minimoTurni: findMinShiftsDay(lastMonth)\n  };\n};\nexport const getPreviousMonthData = () => {\n  if (monthsData.length > 1) {\n    const previousMonth = monthsData[monthsData.length - 2];\n    return {\n      totaleTurni: calculateTotalShifts(previousMonth),\n      mediaGiornaliera: calculateAverageWorkdayShifts(previousMonth),\n      massimoTurni: findMaxShiftsDay(previousMonth),\n      minimoTurni: findMinShiftsDay(previousMonth)\n    };\n  }\n  // Se non c'è un mese precedente disponibile, restituisci dati fittizi\n  return {\n    totaleTurni: 280,\n    mediaGiornaliera: 9.3,\n    massimoTurni: {\n      day: 15,\n      shifts: 20\n    },\n    minimoTurni: {\n      day: 30,\n      shifts: 1\n    }\n  };\n};\nexport const getAnnualAverageData = () => {\n  const totalTurni = monthsData.reduce((total, month) => total + calculateTotalShifts(month), 0);\n  const averageTurni = totalTurni / monthsData.length;\n  return {\n    mediaAnnuale: averageTurni\n  };\n};\nexport const getYearData = year => {\n  const yearData = monthsData.filter(m => m.year.toString() === year);\n  if (yearData.length > 0) {\n    const totaleTurni = yearData.reduce((total, month) => total + calculateTotalShifts(month), 0);\n    return {\n      totaleTurni,\n      mediaMensile: totaleTurni / yearData.length\n    };\n  }\n  return null;\n};\nexport const getAvailableYears = () => {\n  const years = [...new Set(monthsData.map(m => m.year))];\n  return years.map(year => ({\n    value: year.toString(),\n    label: year.toString()\n  })).sort((a, b) => b.value - a.value);\n};\nexport const getYearlyData = year => {\n  const yearData = {};\n  monthsData.forEach(month => {\n    if (month.year === year) {\n      yearData[month.month - 1] = {\n        totaleTurni: calculateTotalShifts(month)\n      };\n    }\n  });\n  if (Object.keys(yearData).length === 0) {\n    for (let i = 0; i < 12; i++) {\n      yearData[i] = {\n        totaleTurni: 0\n      };\n    }\n  }\n  return yearData;\n};","map":{"version":3,"names":["monthsData","year","month","days","calculateTotalShifts","data","Object","values","reduce","total","shifts","getWorkdaysInMonth","date","Date","workdays","getMonth","dayOfWeek","getDay","setDate","getDate","calculateAverageWorkdayShifts","getMonthName","monthNumber","monthNames","findMaxShiftsDay","entries","max","day","parseInt","findMinShiftsDay","min","getMonthData","yearMonth","split","map","Number","monthData","find","m","totaleTurni","mediaGiornaliera","massimoTurni","minimoTurni","getAvailableMonths","value","toString","padStart","label","sortValue","sort","a","b","getLatestMonthData","lastMonth","length","getPreviousMonthData","previousMonth","getAnnualAverageData","totalTurni","averageTurni","mediaAnnuale","getYearData","yearData","filter","mediaMensile","getAvailableYears","years","Set","getYearlyData","forEach","keys","i"],"sources":["/Users/marcoaugustocomba/Desktop/Studio Stats/dashboard-pumaisdue/src/data.js"],"sourcesContent":["// Strutture dati per i mesi\nconst monthsData = [\n  // Dati 2020\n  {\n    year: 2020,\n    month: 1, // Gennaio\n    days: {\n      1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0,\n      8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0,\n      15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 0,\n      22: 0, 23: 0, 24: 3, 25: 0, 26: 0, 27: 0, 28: 11,\n      29: 0, 30: 0, 31: 0\n    }\n  },\n  {\n    year: 2020,\n    month: 2, // Febbraio\n    days: {\n      1: 0, 2: 0, 3: 7, 4: 7, 5: 8, 6: 11, 7: 10,\n      8: 0, 9: 0, 10: 4, 11: 4, 12: 3, 13: 4, 14: 1,\n      15: 0, 16: 0, 17: 2, 18: 4, 19: 0, 20: 4, 21: 3,\n      22: 0, 23: 0, 24: 9, 25: 4, 26: 3, 27: 6, 28: 8,\n      29: 0\n    }\n  },\n  {\n    year: 2020,\n    month: 3, // Marzo\n    days: {\n      1: 0, 2: 8, 3: 10, 4: 8, 5: 7, 6: 7, 7: 0,\n      8: 0, 9: 5, 10: 3, 11: 0, 12: 1, 13: 0, 14: 0,\n      15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0,\n      22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0,\n      29: 0, 30: 0, 31: 0\n    }\n  },\n  {\n    year: 2020,\n    month: 4, // Aprile\n    days: {\n      1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0,\n      8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0,\n      15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 11, 21: 8,\n      22: 8, 23: 10, 24: 11, 25: 0, 26: 0, 27: 16, 28: 13,\n      29: 14, 30: 11\n    }\n  },\n  {\n    year: 2020,\n    month: 5, // Maggio\n    days: {\n      1: 0, 2: 0, 3: 0, 4: 18, 5: 16, 6: 16, 7: 16, 8: 14, 9: 0,\n      10: 0, 11: 19, 12: 22, 13: 14, 14: 13, 15: 16, 16: 0, 17: 0,\n      18: 17, 19: 21, 20: 13, 21: 21, 22: 20, 23: 2, 24: 0, 25: 15,\n      26: 13, 27: 9, 28: 9, 29: 3, 30: 0, 31: 0\n    }\n  },\n  {\n    year: 2020,\n    month: 6, // Giugno\n    days: {\n      1: 3, 2: 0, 3: 7, 4: 6, 5: 4, 6: 0, 7: 0, 8: 5, 9: 5,\n      10: 10, 11: 6, 12: 11, 13: 0, 14: 0, 15: 10, 16: 10, 17: 13,\n      18: 13, 19: 9, 20: 0, 21: 0, 22: 9, 23: 13, 24: 12, 25: 15,\n      26: 11, 27: 0, 28: 0, 29: 0, 30: 16\n    }\n  },\n  {\n    year: 2020,\n    month: 7, // Luglio\n    days: {\n      1: 15, 2: 14, 3: 8, 4: 0, 5: 0, 6: 15, 7: 17, 8: 15,\n      9: 17, 10: 14, 11: 0, 12: 0, 13: 16, 14: 11, 15: 8, 16: 12,\n      17: 7, 18: 0, 19: 0, 20: 8, 21: 13, 22: 8, 23: 12, 24: 6,\n      25: 0, 26: 0, 27: 15, 28: 10, 29: 9, 30: 13, 31: 8\n    }\n  },\n  {\n    year: 2020,\n    month: 8, // Agosto\n    days: {\n      1: 0, 2: 0, 3: 9, 4: 4, 5: 1, 6: 0, 7: 0, 8: 0,\n      9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0,\n      17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0,\n      25: 0, 26: 0, 27: 0, 28: 1, 29: 0, 30: 0, 31: 0\n    }\n  },\n  {\n    year: 2020,\n    month: 9, // Settembre\n    days: {\n      1: 0, 2: 0, 3: 0, 4: 2, 5: 0, 6: 0, 7: 8, 8: 9,\n      9: 6, 10: 9, 11: 13, 12: 0, 13: 0, 14: 9, 15: 8, 16: 7,\n      17: 9, 18: 4, 19: 0, 20: 0, 21: 8, 22: 8, 23: 10, 24: 11,\n      25: 13, 26: 0, 27: 0, 28: 12, 29: 13, 30: 13\n    }\n  },\n  {\n    year: 2020,\n    month: 10, // Ottobre\n    days: {\n      1: 15, 2: 11, 3: 2, 4: 0, 5: 12, 6: 19, 7: 20,\n      8: 20, 9: 10, 10: 0, 11: 0, 12: 13, 13: 11, 14: 11,\n      15: 11, 16: 10, 17: 0, 18: 0, 19: 10, 20: 9, 21: 10,\n      22: 12, 23: 8, 24: 0, 25: 0, 26: 6, 27: 9, 28: 9,\n      29: 11, 30: 8, 31: 0\n    }\n  },\n  {\n    year: 2020,\n    month: 11, // Novembre\n    days: {\n      1: 0, 2: 6, 3: 6, 4: 5, 5: 5, 6: 6, 7: 0,\n      8: 0, 9: 6, 10: 5, 11: 6, 12: 7, 13: 2, 14: 0,\n      15: 0, 16: 4, 17: 7, 18: 6, 19: 6, 20: 6, 21: 0,\n      22: 0, 23: 11, 24: 9, 25: 12, 26: 12, 27: 9, 28: 0,\n      29: 0, 30: 6\n    }\n  },\n  {\n    year: 2020,\n    month: 12, // Dicembre\n    days: {\n      1: 7, 2: 9, 3: 7, 4: 6, 5: 0, 6: 0, 7: 1,\n      8: 0, 9: 6, 10: 11, 11: 11, 12: 0, 13: 0, 14: 7,\n      15: 4, 16: 13, 17: 15, 18: 9, 19: 0, 20: 0, 21: 11,\n      22: 16, 23: 13, 24: 0, 25: 0, 26: 0, 27: 0, 28: 12,\n      29: 11, 30: 14, 31: 0\n    }\n  },\n  // Dati 2021\n  {\n    year: 2021,\n    month: 1, // Gennaio\n    days: {\n      1: 0, 2: 0, 3: 0, 4: 10, 5: 7, 6: 0, 7: 9,\n      8: 11, 9: 0, 10: 0, 11: 13, 12: 11, 13: 10, 14: 13,\n      15: 9, 16: 0, 17: 0, 18: 16, 19: 10, 20: 15, 21: 10,\n      22: 8, 23: 0, 24: 0, 25: 10, 26: 8, 27: 6, 28: 6,\n      29: 5, 30: 0, 31: 0\n    }\n  },\n  {\n    year: 2021,\n    month: 2, // Febbraio\n    days: {\n      1: 8, 2: 10, 3: 6, 4: 10, 5: 8, 6: 0, 7: 0,\n      8: 6, 9: 10, 10: 10, 11: 7, 12: 7, 13: 2, 14: 0,\n      15: 6, 16: 6, 17: 7, 18: 14, 19: 10, 20: 0, 21: 0,\n      22: 14, 23: 15, 24: 12, 25: 13, 26: 4, 27: 0, 28: 0\n    }\n  },\n  {\n    year: 2021,\n    month: 3, // Marzo\n    days: {\n      1: 11, 2: 14, 3: 17, 4: 19, 5: 12, 6: 0, 7: 0,\n      8: 17, 9: 17, 10: 16, 11: 17, 12: 19, 13: 3, 14: 0,\n      15: 16, 16: 15, 17: 15, 18: 9, 19: 14, 20: 0, 21: 0,\n      22: 12, 23: 10, 24: 15, 25: 17, 26: 8, 27: 0, 28: 0,\n      29: 7, 30: 13, 31: 15\n    }\n  },\n  {\n    year: 2021,\n    month: 4, // Aprile\n    days: {\n      1: 13, 2: 0, 3: 0, 4: 0, 5: 0, 6: 11, 7: 20,\n      8: 17, 9: 14, 10: 0, 11: 0, 12: 16, 13: 17, 14: 19,\n      15: 16, 16: 10, 17: 0, 18: 0, 19: 22, 20: 16, 21: 17,\n      22: 15, 23: 8, 24: 0, 25: 0, 26: 16, 27: 20, 28: 14,\n      29: 17, 30: 12\n    }\n  },\n  {\n    year: 2021,\n    month: 5, // Maggio\n    days: {\n      1: 2, 2: 0, 3: 16, 4: 16, 5: 14, 6: 21, 7: 11,\n      8: 0, 9: 0, 10: 10, 11: 9, 12: 14, 13: 5, 14: 12,\n      15: 0, 16: 0, 17: 13, 18: 20, 19: 20, 20: 24, 21: 15,\n      22: 0, 23: 0, 24: 18, 25: 20, 26: 17, 27: 17, 28: 16,\n      29: 0, 30: 0, 31: 13\n    }\n  },\n  {\n    year: 2021,\n    month: 6, // Giugno\n    days: {\n      1: 17, 2: 2, 3: 20, 4: 15, 5: 8, 6: 0, 7: 15,\n      8: 19, 9: 17, 10: 16, 11: 19, 12: 0, 13: 0, 14: 20,\n      15: 20, 16: 19, 17: 20, 18: 16, 19: 0, 20: 0, 21: 18,\n      22: 19, 23: 17, 24: 14, 25: 16, 26: 0, 27: 0, 28: 17,\n      29: 3, 30: 24\n    }\n  },\n  {\n    year: 2021,\n    month: 7, // Luglio\n    days: {\n      1: 22, 2: 22, 3: 2, 4: 0, 5: 23, 6: 22, 7: 27,\n      8: 23, 9: 19, 10: 5, 11: 0, 12: 18, 13: 14, 14: 9,\n      15: 15, 16: 15, 17: 0, 18: 0, 19: 16, 20: 11, 21: 12,\n      22: 15, 23: 11, 24: 0, 25: 0, 26: 17, 27: 19, 28: 11,\n      29: 15, 30: 20, 31: 0\n    }\n  },\n  {\n    year: 2021,\n    month: 8, // Agosto\n    days: {\n      1: 0, 2: 20, 3: 18, 4: 15, 5: 12, 6: 5, 7: 0,\n      8: 0, 9: 1, 10: 0, 11: 1, 12: 0, 13: 1, 14: 0,\n      15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0,\n      22: 0, 23: 0, 24: 0, 25: 0, 26: 2, 27: 1, 28: 0,\n      29: 0, 30: 8, 31: 7\n    }\n  },\n  {\n    year: 2021,\n    month: 9, // Settembre\n    days: {\n      1: 10, 2: 14, 3: 9, 4: 0, 5: 0, 6: 20, 7: 20,\n      8: 17, 9: 19, 10: 18, 11: 0, 12: 0, 13: 19, 14: 16,\n      15: 16, 16: 19, 17: 16, 18: 0, 19: 0, 20: 17, 21: 21,\n      22: 18, 23: 21, 24: 14, 25: 0, 26: 0, 27: 20, 28: 22,\n      29: 19, 30: 20\n    }\n  },\n  {\n    year: 2021,\n    month: 10, // Ottobre\n    days: {\n      1: 19, 2: 1, 3: 0, 4: 20, 5: 17, 6: 15, 7: 18,\n      8: 16, 9: 0, 10: 0, 11: 19, 12: 18, 13: 18, 14: 16,\n      15: 17, 16: 1, 17: 0, 18: 20, 19: 21, 20: 21, 21: 21,\n      22: 19, 23: 1, 24: 0, 25: 19, 26: 19, 27: 19, 28: 17,\n      29: 17, 30: 0, 31: 0\n    }\n  },\n  {\n    year: 2021,\n    month: 11, // Novembre\n    days: {\n      1: 0, 2: 21, 3: 19, 4: 20, 5: 14, 6: 0, 7: 0,\n      8: 19, 9: 20, 10: 22, 11: 26, 12: 20, 13: 2, 14: 0,\n      15: 20, 16: 23, 17: 20, 18: 21, 19: 15, 20: 0, 21: 0,\n      22: 20, 23: 20, 24: 20, 25: 19, 26: 14, 27: 0, 28: 0,\n      29: 23, 30: 20\n    }\n  },\n  {\n    year: 2021,\n    month: 12, // Dicembre\n    days: {\n      1: 23, 2: 23, 3: 23, 4: 7, 5: 0, 6: 24, 7: 21,\n      8: 0, 9: 22, 10: 23, 11: 2, 12: 0, 13: 21, 14: 18,\n      15: 17, 16: 17, 17: 13, 18: 0, 19: 0, 20: 15, 21: 11,\n      22: 16, 23: 7, 24: 0, 25: 0, 26: 0, 27: 11, 28: 18,\n      29: 11, 30: 6, 31: 0\n    }\n  },\n  // Dati 2022\n  {\n    year: 2022,\n    month: 1, // Gennaio\n    days: {\n      1: 0, 2: 0, 3: 10, 4: 15, 5: 12, 6: 0, 7: 4, 8: 0,\n      9: 0, 10: 21, 11: 16, 12: 21, 13: 18, 14: 17, 15: 2,\n      16: 0, 17: 19, 18: 16, 19: 21, 20: 20, 21: 19, 22: 0,\n      23: 0, 24: 11, 25: 19, 26: 17, 27: 14, 28: 17, 29: 0,\n      30: 0, 31: 20\n    }\n  },\n  {\n    year: 2022,\n    month: 2, // Febbraio\n    days: {\n      1: 16, 2: 20, 3: 17, 4: 17, 5: 0, 6: 0, 7: 13, 8: 20,\n      9: 15, 10: 15, 11: 14, 12: 0, 13: 0, 14: 19, 15: 21,\n      16: 20, 17: 17, 18: 19, 19: 0, 20: 0, 21: 22, 22: 19,\n      23: 20, 24: 18, 25: 13, 26: 0, 27: 0, 28: 17\n    }\n  },\n  {\n    year: 2022,\n    month: 3, // Marzo\n    days: {\n      1: 14, 2: 20, 3: 21, 4: 20, 5: 0, 6: 0, 7: 16, 8: 18,\n      9: 17, 10: 20, 11: 19, 12: 0, 13: 0, 14: 21, 15: 20,\n      16: 17, 17: 19, 18: 13, 19: 0, 20: 0, 21: 14, 22: 11,\n      23: 16, 24: 18, 25: 14, 26: 0, 27: 0, 28: 18, 29: 18,\n      30: 18, 31: 19\n    }\n  },\n  {\n    year: 2022,\n    month: 4, // Aprile\n    days: {\n      1: 16, 2: 0, 3: 0, 4: 16, 5: 17, 6: 19, 7: 19, 8: 12,\n      9: 0, 10: 0, 11: 15, 12: 19, 13: 21, 14: 20, 15: 11,\n      16: 0, 17: 0, 18: 0, 19: 20, 20: 19, 21: 17, 22: 15,\n      23: 1, 24: 0, 25: 0, 26: 17, 27: 16, 28: 15, 29: 18,\n      30: 0\n    }\n  },\n  {\n    year: 2022,\n    month: 5, // Maggio\n    days: {\n      1: 0, 2: 20, 3: 18, 4: 21, 5: 16, 6: 14, 7: 0,\n      8: 0, 9: 15, 10: 16, 11: 17, 12: 18, 13: 18, 14: 3,\n      15: 0, 16: 21, 17: 19, 18: 19, 19: 21, 20: 16, 21: 0,\n      22: 0, 23: 18, 24: 21, 25: 21, 26: 19, 27: 18, 28: 3,\n      29: 0, 30: 18, 31: 16\n    }\n  },\n  {\n    year: 2022,\n    month: 6, // Giugno\n    days: {\n      1: 17, 2: 0, 3: 13, 4: 0, 5: 0, 6: 18, 7: 21,\n      8: 21, 9: 22, 10: 19, 11: 3, 12: 0, 13: 19, 14: 17,\n      15: 22, 16: 18, 17: 18, 18: 0, 19: 0, 20: 18, 21: 18,\n      22: 19, 23: 20, 24: 15, 25: 2, 26: 0, 27: 21, 28: 18,\n      29: 0, 30: 23\n    }\n  },\n  {\n    year: 2022,\n    month: 7, // Luglio\n    days: {\n      1: 16, 2: 0, 3: 0, 4: 15, 5: 15, 6: 18, 7: 18,\n      8: 19, 9: 0, 10: 0, 11: 13, 12: 17, 13: 19, 14: 18,\n      15: 21, 16: 3, 17: 0, 18: 21, 19: 23, 20: 19, 21: 23,\n      22: 19, 23: 0, 24: 0, 25: 22, 26: 19, 27: 20, 28: 21,\n      29: 23, 30: 0, 31: 0\n    }\n  },\n  {\n    year: 2022,\n    month: 8, // Agosto\n    days: {\n      1: 21, 2: 17, 3: 20, 4: 12, 5: 9, 6: 0, 7: 0,\n      8: 11, 9: 3, 10: 0, 11: 0, 12: 1, 13: 0, 14: 0,\n      15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0,\n      22: 0, 23: 1, 24: 4, 25: 5, 26: 7, 27: 0, 28: 0,\n      29: 17, 30: 16, 31: 17\n    }\n  },\n  {\n    year: 2022,\n    month: 9, // Settembre\n    days: {\n      1: 20, 2: 21, 3: 3, 4: 0, 5: 24, 6: 22, 7: 23,\n      8: 21, 9: 23, 10: 3, 11: 0, 12: 23, 13: 20, 14: 21,\n      15: 22, 16: 14, 17: 0, 18: 0, 19: 21, 20: 19, 21: 21,\n      22: 22, 23: 14, 24: 0, 25: 0, 26: 19, 27: 22, 28: 14,\n      29: 16, 30: 14\n    }\n  },\n  {\n    year: 2022,\n    month: 10, // Ottobre\n    days: {\n      1: 0, 2: 0, 3: 9, 4: 12, 5: 14, 6: 10, 7: 15, 8: 0,\n      9: 0, 10: 19, 11: 17, 12: 16, 13: 19, 14: 20, 15: 1,\n      16: 0, 17: 19, 18: 15, 19: 19, 20: 22, 21: 15, 22: 0,\n      23: 0, 24: 20, 25: 14, 26: 19, 27: 19, 28: 16, 29: 0,\n      30: 0, 31: 7\n    }\n  },\n  {\n    year: 2022,\n    month: 11, // Novembre\n    days: {\n      1: 0, 2: 19, 3: 19, 4: 19, 5: 0, 6: 0, 7: 19, 8: 21,\n      9: 18, 10: 21, 11: 16, 12: 2, 13: 0, 14: 17, 15: 14,\n      16: 18, 17: 18, 18: 18, 19: 0, 20: 0, 21: 19, 22: 19,\n      23: 16, 24: 19, 25: 17, 26: 0, 27: 0, 28: 18, 29: 16,\n      30: 15\n    }\n  },\n  {\n    year: 2022,\n    month: 12, // Dicembre\n    days: {\n      1: 16, 2: 14, 3: 0, 4: 0, 5: 12, 6: 17, 7: 18, 8: 0,\n      9: 5, 10: 0, 11: 0, 12: 14, 13: 15, 14: 17, 15: 22,\n      16: 10, 17: 0, 18: 0, 19: 19, 20: 15, 21: 16, 22: 15,\n      23: 5, 24: 0, 25: 0, 26: 0, 27: 8, 28: 4, 29: 4,\n      30: 2, 31: 0\n    }\n  },\n  // Dati 2023\n  {\n    year: 2023,\n    month: 1, // Gennaio\n    days: {\n      1: 0, 2: 1, 3: 2, 4: 4, 5: 0, 6: 0, 7: 0,\n      8: 0, 9: 19, 10: 16, 11: 15, 12: 9, 13: 8, 14: 0,\n      15: 0, 16: 12, 17: 12, 18: 10, 19: 9, 20: 8, 21: 0,\n      22: 0, 23: 12, 24: 12, 25: 16, 26: 19, 27: 16, 28: 0,\n      29: 0, 30: 17, 31: 16\n    }\n  },\n  {\n    year: 2023,\n    month: 2, // Febbraio\n    days: {\n      1: 16, 2: 15, 3: 13, 4: 0, 5: 0, 6: 16, 7: 19,\n      8: 17, 9: 12, 10: 17, 11: 0, 12: 0, 13: 13, 14: 14,\n      15: 15, 16: 14, 17: 12, 18: 0, 19: 0, 20: 14, 21: 11,\n      22: 2, 23: 2, 24: 3, 25: 0, 26: 0, 27: 2, 28: 0\n    }\n  },\n  {\n    year: 2023,\n    month: 3, // Marzo\n    days: {\n      1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0,\n      8: 0, 9: 0, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0,\n      15: 17, 16: 15, 17: 12, 18: 0, 19: 0, 20: 17, 21: 16,\n      22: 21, 23: 21, 24: 20, 25: 0, 26: 0, 27: 21, 28: 17,\n      29: 15, 30: 13, 31: 14\n    }\n  },\n  {\n    year: 2023,\n    month: 4, // Aprile\n    days: {\n      1: 0, 2: 0, 3: 16, 4: 13, 5: 14, 6: 12, 7: 5,\n      8: 0, 9: 0, 10: 0, 11: 17, 12: 14, 13: 15, 14: 15,\n      15: 0, 16: 0, 17: 12, 18: 15, 19: 18, 20: 21, 21: 16,\n      22: 0, 23: 0, 24: 9, 25: 0, 26: 19, 27: 20, 28: 15,\n      29: 0, 30: 0\n    }\n  },\n  {\n    year: 2023,\n    month: 5, // Maggio\n    days: {\n      1: 0, 2: 18, 3: 21, 4: 18, 5: 20, 6: 0, 7: 0,\n      8: 19, 9: 19, 10: 19, 11: 19, 12: 18, 13: 0, 14: 0,\n      15: 19, 16: 19, 17: 19, 18: 17, 19: 10, 20: 0, 21: 0,\n      22: 20, 23: 19, 24: 20, 25: 21, 26: 19, 27: 0, 28: 0,\n      29: 21, 30: 21, 31: 20\n    }\n  },\n  {\n    year: 2023,\n    month: 6, // Giugno\n    days: {\n      1: 19, 2: 0, 3: 0, 4: 0, 5: 22, 6: 21, 7: 19, 8: 16, 9: 19, 10: 0,\n      11: 0, 12: 19, 13: 20, 14: 21, 15: 22, 16: 12, 17: 0, 18: 0, 19: 19,\n      20: 16, 21: 15, 22: 18, 23: 16, 24: 0, 25: 0, 26: 19, 27: 19, 28: 21,\n      29: 0, 30: 7\n    }\n  },\n  {\n    year: 2023,\n    month: 7, // Luglio\n    days: {\n      1: 0, 2: 0, 3: 21, 4: 18, 5: 23, 6: 23, 7: 18, 8: 0,\n      9: 0, 10: 17, 11: 19, 12: 18, 13: 17, 14: 9, 15: 0,\n      16: 0, 17: 16, 18: 16, 19: 13, 20: 14, 21: 9, 22: 0,\n      23: 0, 24: 13, 25: 13, 26: 18, 27: 15, 28: 7, 29: 0,\n      30: 0, 31: 12\n    }\n  },\n  {\n    year: 2023,\n    month: 8, // Agosto\n    days: {\n      1: 15, 2: 7, 3: 8, 4: 3, 5: 0, 6: 0, 7: 3, 8: 1,\n      9: 0, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0,\n      16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0,\n      23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 6, 29: 8,\n      30: 7, 31: 7\n    }\n  },\n  {\n    year: 2023,\n    month: 9, // Settembre\n    days: {\n      1: 7, 2: 0, 3: 0, 4: 9, 5: 11, 6: 20, 7: 20, 8: 11,\n      9: 0, 10: 0, 11: 17, 12: 17, 13: 18, 14: 15, 15: 12,\n      16: 0, 17: 0, 18: 10, 19: 13, 20: 19, 21: 11, 22: 6,\n      23: 0, 24: 0, 25: 11, 26: 12, 27: 15, 28: 10, 29: 8,\n      30: 0\n    }\n  },\n  {\n    year: 2023,\n    month: 10, // Ottobre\n    days: {\n      1: 0, 2: 23, 3: 19, 4: 22, 5: 14, 6: 11, 7: 0,\n      8: 0, 9: 13, 10: 22, 11: 18, 12: 16, 13: 12, 14: 0,\n      15: 0, 16: 19, 17: 18, 18: 21, 19: 14, 20: 10, 21: 0,\n      22: 0, 23: 14, 24: 15, 25: 18, 26: 18, 27: 7, 28: 0,\n      29: 0, 30: 16, 31: 13\n    }\n  },\n  {\n    year: 2023,\n    month: 11, // Novembre\n    days: {\n      1: 0, 2: 11, 3: 5, 4: 0, 5: 0, 6: 6, 7: 10, 8: 12,\n      9: 16, 10: 14, 11: 0, 12: 0, 13: 18, 14: 10, 15: 9,\n      16: 7, 17: 6, 18: 0, 19: 0, 20: 13, 21: 12, 22: 11,\n      23: 13, 24: 14, 25: 0, 26: 0, 27: 8, 28: 9, 29: 13,\n      30: 12\n    }\n  },\n  {\n    year: 2023,\n    month: 12, // Dicembre\n    days: {\n      1: 9, 2: 0, 3: 0, 4: 9, 5: 12, 6: 19, 7: 15, 8: 0,\n      9: 0, 10: 0, 11: 11, 12: 7, 13: 19, 14: 14, 15: 11,\n      16: 0, 17: 0, 18: 20, 19: 23, 20: 16, 21: 12, 22: 8,\n      23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 0,\n      30: 0, 31: 0\n    }\n  },\n  {\n    year: 2024,\n    month: 1, // Gennaio\n    days: {\n      1: 0, 2: 0, 3: 3, 4: 1, 5: 3, 6: 0, 7: 0,\n      8: 10, 9: 6, 10: 10, 11: 8, 12: 9, 13: 0, 14: 0,\n      15: 10, 16: 12, 17: 10, 18: 9, 19: 9, 20: 0, 21: 0,\n      22: 11, 23: 12, 24: 10, 25: 11, 26: 9, 27: 0, 28: 0,\n      29: 8, 30: 9, 31: 9\n    }\n  },\n  {\n    year: 2024,\n    month: 2, // Febbraio\n    days: {\n      1: 9, 2: 6, 3: 0, 4: 0, 5: 9, 6: 11, 7: 11,\n      8: 11, 9: 11, 10: 0, 11: 0, 12: 11, 13: 11, 14: 12,\n      15: 16, 16: 10, 17: 0, 18: 0, 19: 11, 20: 14, 21: 8,\n      22: 11, 23: 11, 24: 0, 25: 0, 26: 3, 27: 17, 28: 12,\n      29: 17\n    }\n  },\n  {\n    year: 2024,\n    month: 3, // Marzo\n    days: {\n      1: 13, 2: 3, 3: 0, 4: 8, 5: 8, 6: 10, 7: 8,\n      8: 8, 9: 0, 10: 0, 11: 7, 12: 6, 13: 8, 14: 8,\n      15: 4, 16: 0, 17: 0, 18: 4, 19: 7, 20: 12, 21: 14,\n      22: 10, 23: 3, 24: 0, 25: 11, 26: 13, 27: 7, 28: 8,\n      29: 4, 30: 0, 31: 0\n    }\n  },\n  {\n    year: 2024,\n    month: 4, // Aprile\n    days: {\n      1: 0, 2: 9, 3: 10, 4: 18, 5: 19, 6: 3, 7: 0,\n      8: 21, 9: 25, 10: 23, 11: 25, 12: 19, 13: 3, 14: 0,\n      15: 22, 16: 22, 17: 23, 18: 26, 19: 19, 20: 2, 21: 0,\n      22: 17, 23: 23, 24: 20, 25: 0, 26: 12, 27: 3, 28: 0,\n      29: 13, 30: 15\n    }\n  },\n  {\n    year: 2024,\n    month: 5, // Maggio\n    days: {\n      1: 0, 2: 16, 3: 13, 4: 2, 5: 0, 6: 15, 7: 16,\n      8: 23, 9: 18, 10: 20, 11: 2, 12: 0, 13: 16, 14: 20,\n      15: 19, 16: 21, 17: 18, 18: 3, 19: 0, 20: 18, 21: 17,\n      22: 18, 23: 19, 24: 20, 25: 2, 26: 0, 27: 14, 28: 23,\n      29: 20, 30: 22, 31: 23\n    }\n  },\n  {\n    year: 2024,\n    month: 6, // Giugno\n    days: {\n      1: 2, 2: 0, 3: 24, 4: 25, 5: 19, 6: 27, 7: 23, 8: 2,\n      9: 0, 10: 18, 11: 17, 12: 18, 13: 18, 14: 19, 15: 3,\n      16: 0, 17: 15, 18: 18, 19: 17, 20: 16, 21: 20, 22: 2,\n      23: 0, 24: 22, 25: 20, 26: 21, 27: 19, 28: 18, 29: 0,\n      30: 0\n    }\n  },\n  {\n    year: 2024,\n    month: 7, // Luglio\n    days: {\n      1: 19, 2: 16, 3: 26, 4: 15, 5: 7, 6: 0, 7: 0,\n      8: 20, 9: 22, 10: 25, 11: 16, 12: 21, 13: 0, 14: 0,\n      15: 14, 16: 18, 17: 18, 18: 22, 19: 12, 20: 0, 21: 0,\n      22: 18, 23: 13, 24: 17, 25: 23, 26: 21, 27: 0, 28: 0,\n      29: 29, 30: 28, 31: 22\n    }\n  },\n  {\n    year: 2024,\n    month: 8, // Agosto\n    days: {\n      1: 19, 2: 11, 3: 0, 4: 0, 5: 10, 6: 5, 7: 5,\n      8: 6, 9: 2, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0,\n      15: 0, 16: 0, 17: 0, 18: 0, 19: 2, 20: 0, 21: 0,\n      22: 0, 23: 0, 24: 0, 25: 0, 26: 7, 27: 7, 28: 8,\n      29: 12, 30: 8, 31: 0\n    }\n  }\n];\n\n// Funzioni di utilità\n\nconst calculateTotalShifts = (data) => {\n  return Object.values(data.days).reduce((total, shifts) => total + shifts, 0);\n};\n\nconst getWorkdaysInMonth = (year, month) => {\n  const date = new Date(year, month - 1, 1);\n  let workdays = 0;\n  while (date.getMonth() === month - 1) {\n    const dayOfWeek = date.getDay();\n    if (dayOfWeek !== 0 && dayOfWeek !== 6) workdays++;\n    date.setDate(date.getDate() + 1);\n  }\n  return workdays;\n};\n\nconst calculateAverageWorkdayShifts = (data) => {\n  const total = calculateTotalShifts(data);\n  const workdays = getWorkdaysInMonth(data.year, data.month);\n  return total / workdays;\n};\n\nconst getMonthName = (monthNumber) => {\n  const monthNames = ['Gennaio', 'Febbraio', 'Marzo', 'Aprile', 'Maggio', 'Giugno', \n                      'Luglio', 'Agosto', 'Settembre', 'Ottobre', 'Novembre', 'Dicembre'];\n  return monthNames[monthNumber - 1];\n};\n\nconst findMaxShiftsDay = (data) => {\n  return Object.entries(data.days).reduce((max, [day, shifts]) => {\n    return shifts > max.shifts ? { day: parseInt(day), shifts } : max;\n  }, { day: 0, shifts: 0 });\n};\n\nconst findMinShiftsDay = (data) => {\n  return Object.entries(data.days).reduce((min, [day, shifts]) => {\n    if (shifts === 0) return min;\n    return (shifts < min.shifts || min.shifts === 0) ? { day: parseInt(day), shifts } : min;\n  }, { day: 0, shifts: 0 });\n};\n\n// Funzioni principali\n\nexport const getMonthData = (yearMonth) => {\n  const [year, month] = yearMonth.split('-').map(Number);\n  const monthData = monthsData.find(m => m.year === year && m.month === month);\n  \n  if (monthData) {\n    return {\n      totaleTurni: calculateTotalShifts(monthData),\n      mediaGiornaliera: calculateAverageWorkdayShifts(monthData),\n      massimoTurni: findMaxShiftsDay(monthData),\n      minimoTurni: findMinShiftsDay(monthData)\n    };\n  }\n  \n  return null;\n};\n\nexport const getAvailableMonths = () => {\n  return monthsData\n    .map(m => ({\n      value: `${m.year}-${m.month.toString().padStart(2, '0')}`,\n      label: `${getMonthName(m.month)} ${m.year}`,\n      sortValue: m.year * 12 + m.month\n    }))\n    .sort((a, b) => b.sortValue - a.sortValue)\n    .map(({ value, label }) => ({ value, label }));\n};\n\nexport const getLatestMonthData = () => {\n  const lastMonth = monthsData[monthsData.length - 1];\n  return {\n    totaleTurni: calculateTotalShifts(lastMonth),\n    mediaGiornaliera: calculateAverageWorkdayShifts(lastMonth),\n    massimoTurni: findMaxShiftsDay(lastMonth),\n    minimoTurni: findMinShiftsDay(lastMonth)\n  };\n};\n\nexport const getPreviousMonthData = () => {\n  if (monthsData.length > 1) {\n    const previousMonth = monthsData[monthsData.length - 2];\n    return {\n      totaleTurni: calculateTotalShifts(previousMonth),\n      mediaGiornaliera: calculateAverageWorkdayShifts(previousMonth),\n      massimoTurni: findMaxShiftsDay(previousMonth),\n      minimoTurni: findMinShiftsDay(previousMonth)\n    };\n  }\n  // Se non c'è un mese precedente disponibile, restituisci dati fittizi\n  return {\n    totaleTurni: 280,\n    mediaGiornaliera: 9.3,\n    massimoTurni: { day: 15, shifts: 20 },\n    minimoTurni: { day: 30, shifts: 1 }\n  };\n};\n\nexport const getAnnualAverageData = () => {\n  const totalTurni = monthsData.reduce((total, month) => total + calculateTotalShifts(month), 0);\n  const averageTurni = totalTurni / monthsData.length;\n  return {\n    mediaAnnuale: averageTurni\n  };\n};\n\nexport const getYearData = (year) => {\n  const yearData = monthsData.filter(m => m.year.toString() === year);\n  if (yearData.length > 0) {\n    const totaleTurni = yearData.reduce((total, month) => total + calculateTotalShifts(month), 0);\n    return {\n      totaleTurni,\n      mediaMensile: totaleTurni / yearData.length\n    };\n  }\n  return null;\n};\n\nexport const getAvailableYears = () => {\n  const years = [...new Set(monthsData.map(m => m.year))];\n  return years\n    .map(year => ({\n      value: year.toString(),\n      label: year.toString()\n    }))\n    .sort((a, b) => b.value - a.value);\n};\n\nexport const getYearlyData = (year) => {\n  const yearData = {};\n  monthsData.forEach(month => {\n    if (month.year === year) {\n      yearData[month.month - 1] = { totaleTurni: calculateTotalShifts(month) };\n    }\n  });\n\n  if (Object.keys(yearData).length === 0) {\n    for (let i = 0; i < 12; i++) {\n      yearData[i] = { totaleTurni: 0 };\n    }\n  }\n\n  return yearData;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}