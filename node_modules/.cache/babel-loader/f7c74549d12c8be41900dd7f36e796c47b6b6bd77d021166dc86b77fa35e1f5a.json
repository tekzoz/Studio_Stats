{"ast":null,"code":"import React from'react';import{ArrowLeft,Calendar,Clock,TrendingUpDown}from'lucide-react';import{getLatestMonthData,getPreviousMonthData,getAnnualAverageData}from'./data';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const StatCard=_ref=>{let{icon,label,value,comparison,backgroundColor,maxMin}=_ref;return/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:backgroundColor,borderRadius:'12px',boxShadow:'0 4px 6px rgba(0, 0, 0, 0.1)',padding:'24px',display:'flex',flexDirection:'column',marginBottom:'24px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',marginBottom:'16px'},children:[/*#__PURE__*/React.cloneElement(icon,{size:24,color:'#4B5563'}),/*#__PURE__*/_jsx(\"span\",{style:{marginLeft:'12px',fontSize:'18px',fontWeight:'500',color:'#4B5563'},children:label})]}),maxMin?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'24px',fontWeight:'bold',color:'#1F2937',marginBottom:'8px'},children:[\"Max: \",maxMin.max.valore,\" (giorno \",maxMin.max.giorno,\")\"]}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'24px',fontWeight:'bold',color:'#1F2937',marginBottom:'8px'},children:[\"Min: \",maxMin.min.valore,\" (giorno \",maxMin.min.giorno,\")\"]})]}):/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'36px',fontWeight:'bold',color:'#1F2937',marginBottom:'8px'},children:value}),comparison&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'8px',fontSize:'14px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{color:comparison.prevMonth.value==='N/A'?'gray':parseFloat(comparison.prevMonth.value)>0?'green':'red'},children:[comparison.prevMonth.value,\" (\",comparison.prevMonth.percentage,\") rispetto a \",comparison.prevMonthName]}),/*#__PURE__*/_jsxs(\"div\",{style:{color:comparison.annual.value==='N/A'?'gray':parseFloat(comparison.annual.value)>0?'green':'red'},children:[comparison.annual.value,\" (\",comparison.annual.percentage,\") rispetto alla media annuale \",comparison.year]})]})]});};const calculateComparison=(current,previous)=>{if(typeof current!=='number'||typeof previous!=='number'){return{value:'N/A',percentage:'N/A'};}const diff=current-previous;const percentage=(diff/previous*100).toFixed(1);return{value:diff>0?`+${diff.toFixed(1)}`:diff.toFixed(1),percentage:diff>0?`+${percentage}%`:`${percentage}%`};};const LastMonthView=_ref2=>{let{setView}=_ref2;const latestMonthData=getLatestMonthData();const previousMonthData=getPreviousMonthData();const annualAverageData=getAnnualAverageData();const currentDate=new Date();const lastMonth=new Date(currentDate.getFullYear(),currentDate.getMonth()-1,1);const monthNames=['GENNAIO','FEBBRAIO','MARZO','APRILE','MAGGIO','GIUGNO','LUGLIO','AGOSTO','SETTEMBRE','OTTOBRE','NOVEMBRE','DICEMBRE'];const displayMonth=monthNames[lastMonth.getMonth()];const displayYear=lastMonth.getFullYear();const comparisonDataTurni={prevMonth:calculateComparison(latestMonthData.totaleTurni,previousMonthData.totaleTurni),annual:calculateComparison(latestMonthData.totaleTurni,annualAverageData.mediaAnnuale),prevMonthName:monthNames[(lastMonth.getMonth()+11)%12],year:displayYear};const comparisonDataMedia={prevMonth:calculateComparison(latestMonthData.mediaGiornaliera,previousMonthData.mediaGiornaliera),annual:calculateComparison(latestMonthData.mediaGiornaliera,annualAverageData.mediaAnnuale/30),// Approssimazione\nprevMonthName:monthNames[(lastMonth.getMonth()+11)%12],year:displayYear};const stats=[{icon:/*#__PURE__*/_jsx(Calendar,{}),label:'Totale Turni di Doppiaggio',value:latestMonthData.totaleTurni,comparison:comparisonDataTurni,backgroundColor:'#E6F3FF'},{icon:/*#__PURE__*/_jsx(Clock,{}),label:'Media Turni di Doppiaggio Giornaliera (Lun-Ven)',value:latestMonthData.mediaGiornaliera.toFixed(1),comparison:comparisonDataMedia,backgroundColor:'#FFF0E6'},{icon:/*#__PURE__*/_jsx(TrendingUpDown,{}),label:'Massimo e Minimo Turni di Doppiaggio',maxMin:{max:{valore:latestMonthData.massimoTurni.shifts,giorno:latestMonthData.massimoTurni.day},min:{valore:latestMonthData.minimoTurni.shifts,giorno:latestMonthData.minimoTurni.day}},backgroundColor:'#E6FFE6'}];return/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:'#F0F9FF',minHeight:'100vh',padding:'24px',fontFamily:\"'Helvetica Neue', Arial, sans-serif\"},children:/*#__PURE__*/_jsxs(\"div\",{style:{maxWidth:'600px',margin:'0 auto'},children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setView('main'),style:{background:'#4B5563',color:'white',border:'none',borderRadius:'8px',padding:'10px 20px',cursor:'pointer',display:'flex',alignItems:'center',fontSize:'16px',marginBottom:'24px',transition:'background-color 0.3s'},onMouseOver:e=>e.currentTarget.style.backgroundColor='#374151',onMouseOut:e=>e.currentTarget.style.backgroundColor='#4B5563',children:[/*#__PURE__*/_jsx(ArrowLeft,{size:20,style:{marginRight:'8px'}}),\"Torna alla Dashboard\"]}),/*#__PURE__*/_jsx(\"h1\",{style:{fontSize:'32px',fontWeight:'bold',textAlign:'center',marginBottom:'8px',color:'#1F2937'},children:\"Statistiche Ultimo Mese\"}),/*#__PURE__*/_jsxs(\"h2\",{style:{fontSize:'28px',fontWeight:'bold',textAlign:'center',marginBottom:'32px',color:'#4B5563',textTransform:'uppercase'},children:[displayMonth,\" \",displayYear]}),/*#__PURE__*/_jsx(\"div\",{children:stats.map((stat,index)=>/*#__PURE__*/_jsx(StatCard,{...stat},index))})]})});};export default LastMonthView;","map":{"version":3,"names":["React","ArrowLeft","Calendar","Clock","TrendingUpDown","getLatestMonthData","getPreviousMonthData","getAnnualAverageData","jsx","_jsx","jsxs","_jsxs","StatCard","_ref","icon","label","value","comparison","backgroundColor","maxMin","style","borderRadius","boxShadow","padding","display","flexDirection","marginBottom","children","alignItems","cloneElement","size","color","marginLeft","fontSize","fontWeight","max","valore","giorno","min","marginTop","prevMonth","parseFloat","percentage","prevMonthName","annual","year","calculateComparison","current","previous","diff","toFixed","LastMonthView","_ref2","setView","latestMonthData","previousMonthData","annualAverageData","currentDate","Date","lastMonth","getFullYear","getMonth","monthNames","displayMonth","displayYear","comparisonDataTurni","totaleTurni","mediaAnnuale","comparisonDataMedia","mediaGiornaliera","stats","massimoTurni","shifts","day","minimoTurni","minHeight","fontFamily","maxWidth","margin","onClick","background","border","cursor","transition","onMouseOver","e","currentTarget","onMouseOut","marginRight","textAlign","textTransform","map","stat","index"],"sources":["/Users/marcoaugustocomba/Desktop/Studio Stats/dashboard-pumaisdue/src/LastMonthView.js"],"sourcesContent":["import React from 'react';\nimport { ArrowLeft, Calendar, Clock, TrendingUpDown } from 'lucide-react';\nimport { getLatestMonthData, getPreviousMonthData, getAnnualAverageData } from './data';\n\nconst StatCard = ({ icon, label, value, comparison, backgroundColor, maxMin }) => (\n  <div style={{\n    backgroundColor: backgroundColor,\n    borderRadius: '12px',\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n    padding: '24px',\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: '24px',\n  }}>\n    <div style={{ display: 'flex', alignItems: 'center', marginBottom: '16px' }}>\n      {React.cloneElement(icon, { size: 24, color: '#4B5563' })}\n      <span style={{ marginLeft: '12px', fontSize: '18px', fontWeight: '500', color: '#4B5563' }}>{label}</span>\n    </div>\n    {maxMin ? (\n      <div>\n        <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#1F2937', marginBottom: '8px' }}>\n          Max: {maxMin.max.valore} (giorno {maxMin.max.giorno})\n        </div>\n        <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#1F2937', marginBottom: '8px' }}>\n          Min: {maxMin.min.valore} (giorno {maxMin.min.giorno})\n        </div>\n      </div>\n    ) : (\n      <div style={{ fontSize: '36px', fontWeight: 'bold', color: '#1F2937', marginBottom: '8px' }}>{value}</div>\n    )}\n    {comparison && (\n      <div style={{ marginTop: '8px', fontSize: '14px' }}>\n        <div style={{ color: comparison.prevMonth.value === 'N/A' ? 'gray' : (parseFloat(comparison.prevMonth.value) > 0 ? 'green' : 'red') }}>\n          {comparison.prevMonth.value} ({comparison.prevMonth.percentage}) rispetto a {comparison.prevMonthName}\n        </div>\n        <div style={{ color: comparison.annual.value === 'N/A' ? 'gray' : (parseFloat(comparison.annual.value) > 0 ? 'green' : 'red') }}>\n          {comparison.annual.value} ({comparison.annual.percentage}) rispetto alla media annuale {comparison.year}\n        </div>\n      </div>\n    )}\n  </div>\n);\n\nconst calculateComparison = (current, previous) => {\n  if (typeof current !== 'number' || typeof previous !== 'number') {\n    return { value: 'N/A', percentage: 'N/A' };\n  }\n  const diff = current - previous;\n  const percentage = ((diff / previous) * 100).toFixed(1);\n  return {\n    value: diff > 0 ? `+${diff.toFixed(1)}` : diff.toFixed(1),\n    percentage: diff > 0 ? `+${percentage}%` : `${percentage}%`\n  };\n};\n\nconst LastMonthView = ({ setView }) => {\n  const latestMonthData = getLatestMonthData();\n  const previousMonthData = getPreviousMonthData();\n  const annualAverageData = getAnnualAverageData();\n\n  const currentDate = new Date();\n  const lastMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1);\n  const monthNames = ['GENNAIO', 'FEBBRAIO', 'MARZO', 'APRILE', 'MAGGIO', 'GIUGNO', 'LUGLIO', 'AGOSTO', 'SETTEMBRE', 'OTTOBRE', 'NOVEMBRE', 'DICEMBRE'];\n  const displayMonth = monthNames[lastMonth.getMonth()];\n  const displayYear = lastMonth.getFullYear();\n\n  const comparisonDataTurni = {\n    prevMonth: calculateComparison(latestMonthData.totaleTurni, previousMonthData.totaleTurni),\n    annual: calculateComparison(latestMonthData.totaleTurni, annualAverageData.mediaAnnuale),\n    prevMonthName: monthNames[(lastMonth.getMonth() + 11) % 12],\n    year: displayYear\n  };\n\n  const comparisonDataMedia = {\n    prevMonth: calculateComparison(latestMonthData.mediaGiornaliera, previousMonthData.mediaGiornaliera),\n    annual: calculateComparison(latestMonthData.mediaGiornaliera, annualAverageData.mediaAnnuale / 30), // Approssimazione\n    prevMonthName: monthNames[(lastMonth.getMonth() + 11) % 12],\n    year: displayYear\n  };\n\n  const stats = [\n    { \n      icon: <Calendar />, \n      label: 'Totale Turni di Doppiaggio', \n      value: latestMonthData.totaleTurni,\n      comparison: comparisonDataTurni,\n      backgroundColor: '#E6F3FF'\n    },\n    { \n      icon: <Clock />, \n      label: 'Media Turni di Doppiaggio Giornaliera (Lun-Ven)', \n      value: latestMonthData.mediaGiornaliera.toFixed(1),\n      comparison: comparisonDataMedia,\n      backgroundColor: '#FFF0E6'\n    },\n    { \n      icon: <TrendingUpDown />, \n      label: 'Massimo e Minimo Turni di Doppiaggio', \n      maxMin: {\n        max: {\n          valore: latestMonthData.massimoTurni.shifts,\n          giorno: latestMonthData.massimoTurni.day\n        },\n        min: {\n          valore: latestMonthData.minimoTurni.shifts,\n          giorno: latestMonthData.minimoTurni.day\n        }\n      },\n      backgroundColor: '#E6FFE6'\n    },\n  ];\n\n  return (\n    <div style={{\n      backgroundColor: '#F0F9FF',\n      minHeight: '100vh',\n      padding: '24px',\n      fontFamily: \"'Helvetica Neue', Arial, sans-serif\",\n    }}>\n      <div style={{ maxWidth: '600px', margin: '0 auto' }}>\n        <button \n          onClick={() => setView('main')} \n          style={{\n            background: '#4B5563',\n            color: 'white',\n            border: 'none',\n            borderRadius: '8px',\n            padding: '10px 20px',\n            cursor: 'pointer',\n            display: 'flex',\n            alignItems: 'center',\n            fontSize: '16px',\n            marginBottom: '24px',\n            transition: 'background-color 0.3s',\n          }}\n          onMouseOver={(e) => e.currentTarget.style.backgroundColor = '#374151'}\n          onMouseOut={(e) => e.currentTarget.style.backgroundColor = '#4B5563'}\n        >\n          <ArrowLeft size={20} style={{ marginRight: '8px' }} />\n          Torna alla Dashboard\n        </button>\n        \n        <h1 style={{\n          fontSize: '32px',\n          fontWeight: 'bold',\n          textAlign: 'center',\n          marginBottom: '8px',\n          color: '#1F2937',\n        }}>\n          Statistiche Ultimo Mese\n        </h1>\n        <h2 style={{\n          fontSize: '28px',\n          fontWeight: 'bold',\n          textAlign: 'center',\n          marginBottom: '32px',\n          color: '#4B5563',\n          textTransform: 'uppercase',\n        }}>\n          {displayMonth} {displayYear}\n        </h2>\n        \n        <div>\n          {stats.map((stat, index) => (\n            <StatCard key={index} {...stat} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LastMonthView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}